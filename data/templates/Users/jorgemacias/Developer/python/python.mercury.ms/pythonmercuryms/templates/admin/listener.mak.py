# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1528997905.336906
_enable_loop = True
_template_filename = '/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/admin/listener.mak'
_template_uri = '/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/admin/listener.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        user = context.get('user', UNDEFINED)
        tg = context.get('tg', UNDEFINED)
        h = context.get('h', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('\n<style type="text/css">\n</style>\n<script>\n            var bell = new Audio("')
        __M_writer(escape(tg.url('/sounds/ding.mp3')))
        __M_writer('");\n            function dateFmatter ( cellvalue, options, rowObject )\n            {\n                var utcDate=moment.utc(cellvalue,"YYYY-MM-DD h:mm:ss")\n                var localDate=moment(utcDate).local();\n                var formatdate = localDate.format("YYYY-MM-DD HH:mm:ss");\n                return formatdate;\n            }\n            function statusFmatter ( cellvalue, options, rowObject ){\n                html=cellvalue;\n                switch (cellvalue){\n                    case cellvalue="A":\n                        html = \'<center><span class="glyphicon glyphicon-search" style="color:blue"></span></center>\';\n                        break;\n                    case cellvalue="0":\n                        html = \'<center><span class="glyphicon glyphicon-remove" style="color:red"></span></center>\';\n                        break;\n                    case cellvalue="1":\n                        html = \'<center><span class="glyphicon glyphicon-ok" style="color:green"></span></center>\';\n                        break;\n                    case cellvalue="P":\n                        html = \'<center><span class="glyphicon glyphicon-time" style="color:sandybrown"></span></center>\';\n                        break;\n                }\n                return html;\n            }\n\n            var grid_name = \'#jgGridListeners\';\n            var grid_pager= \'#listPagerListeners\';\n            var update_url=\'/admin/updateListenerAdmin/?user=')
        __M_writer(escape(user))
        __M_writer("';\n            var load_url='/admin/loadListenerAdmin/?user=")
        __M_writer(escape(user))
        __M_writer("';\n            //var header_container='")
        __M_writer(escape(_('Alerts')))
        __M_writer('\';\n            var addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: update_url, closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    }\n                };\n            var deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: update_url,modal: true, };\n            var grid = jQuery(grid_name);\n\n            $(document).ready(function () {\n                grid.jqGrid({\n                url: load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: [\'')
        __M_writer(escape(_('Hidden')))
        __M_writer("', '")
        __M_writer(escape(_('Listener ID')))
        __M_writer("', '")
        __M_writer(escape(_('Description')))
        __M_writer("', '")
        __M_writer(escape(_('Time Stamp')))
        __M_writer("','")
        __M_writer(escape(_('State')))
        __M_writer('\'],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'listener_id\',index: \'listener_id\',width: 25,align: \'right\',hidden: false,editable: false,edittype: \'text\',editrules: {required: false}},\n                    {name: \'name\',index: \'name\', width: 25, align: \'right\',hidden: false,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'time_stamp\',index: \'time_stamp\', width: 14, align: \'right\',hidden: false,editable: false, edittype: \'text\', formatter:dateFmatter,editrules: {required: false}},\n                    {name: \'state\', index: \'state\', width: 2,align: \'right\',hidden: false, editable: false, edittype: \'text\', formatter:statusFmatter, editrules: {required: true},search:false},\n                ],\n                pager: jQuery(grid_pager),\n                rowNum: 10,\n                rowList: [10, 50, 100],\n                sortname: \'time_stamp\',\n                sortorder: "desc",\n                viewrecords: true,\n                autowidth: true,\n                height: 250,\n                ondblClickRow: function(rowId) {\n                    doDoubleClick(rowId)\n                },\n                //caption: header_container,\n            });\n            grid.jqGrid(\'navGrid\',grid_pager,{edit:true,add:false,del:true, search:true},\n                            editParams,\n                            addParams,\n                            deleteParams,\n                            searchParams,\n                            viewParams);\n            // add custom button\n            grid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-arrow-2-n-s",\n                    title: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    position: "first",\n                    onClickButton: changeState\n                }\n            );\n            grid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-plus",\n                    title: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    position: "first",\n                    onClickButton:  function(rowId) {\n                         var rowKey = grid.getGridParam("selrow");\n                         if (rowKey){\n                             var rowData = grid.getRowData(rowKey);\n                             var myw=new addUserWindow(rowId,grid)\n\n                         }\n                        else{\n                            alert("No rows are selected");\n                            }\n\n                        },\n                }\n            );\n\n\n            grid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-person",\n                    title: "')
        __M_writer(escape(_('Users')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Users')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:  function(rowId) {\n                         var rowKey = grid.getGridParam("selrow");\n                         if (rowKey){\n                             var rowData = grid.getRowData(rowKey);\n                             addUser(rowId,rowData[\'listener_id\']);\n                         }\n                        else{\n                            alert("No rows are selected");\n                            }\n\n                        },\n                }\n            );\n\n\n            }            );\n\n            $.extend($.jgrid.nav,{alerttop:1});\n            function addUser(rowId,listenerID){\n\n                var winHeight=Math.round(window.innerHeight*.50);\n                var winWidth=Math.round(window.innerWidth*.85);\n                // Event Routines\n                var user_fields_grid_name = \'#jqGridUser\';\n                var user_fields_grid_pager= \'#UserTables\';\n                var user_fields_load_url=\'/admin/loadListenerUsers/\'+"?id="+rowId;\n                var user_fields_update_url=\'/admin/updateListenerUsers\';\n                var user_fields_addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: user_fields_update_url, closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var user_fields_editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: user_fields_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    alert(\'The "Edit" button was clicked with rowid=\' + rowid);\n                    }\n                };\n                var user_fields_deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: user_fields_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var user_fields_viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: user_fields_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var user_fields_searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: user_fields_update_url,modal: true, };\n                var user_fields_grid = jQuery(user_fields_grid_name);\n                user_fields_grid.jqGrid({\n                    url: user_fields_load_url,\n                    datatype: \'json\',\n                    mtype: \'GET\',\n                    colNames: [\'user_id\', \'')
        __M_writer(escape(_('User Name')))
        __M_writer("','")
        __M_writer(escape(_('State')))
        __M_writer('\'],\n                    colModel: [\n                        {name: \'user_id\',index: \'user_id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: false}},\n                        {name: \'user_name\',index: \'user_name\', width: 5, align: \'right\', hidden: false, editable: true, edittype: \'text\',editrules: {required: false}},\n                        {name: \'state\', index: \'state\', width: 25,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: false}},\n                    ],\n                    pager: jQuery(user_fields_grid_pager),\n                    rowNum: 15,\n                    loadonce: true,\n                    rowList: [15, 50, 100],\n                    sortname: \'user_name\',\n                    sortorder: "asc",\n                    viewrecords: true,\n                    width: winWidth-40,\n                    height: winHeight-160,\n\n                    ondblClickRow: function(rowId) {\n\n                        },\n                    });\n                    user_fields_grid.jqGrid(\'navGrid\',user_fields_grid_pager,{edit:false,add:false,del:true, search:true},\n                                user_fields_editParams,\n                                user_fields_addParams,\n                                user_fields_deleteParams,\n                                user_fields_searchParams,\n                                user_fields_viewParams)\n                    user_fields_grid.navButtonAdd(user_fields_grid_pager,\n                        {\n                            buttonicon: "ui-icon-plus",\n                            title: "')
        __M_writer(escape(_('Add Users')))
        __M_writer('",\n                            caption: "')
        __M_writer(escape(_('Add Users')))
        __M_writer('",\n                            position: "last",\n                            onClickButton:function() {\n                               addUserWindow(rowId,grid)\n                        }\n                    });\n                $("#UserGrid").show();\n                var editFieldsDialog = $( "#UserGrid" ).dialog({\n                    autoOpen: false,\n                    height: winHeight,\n                    width: winWidth,\n                    title: "Users for listener "+listenerID,\n                    modal: true,\n                    close: function() {\n                        user_fields_grid.jqGrid(\'GridUnload\');\n                    }\n                });\n                $("#UserGrid").trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                editFieldsDialog.data(\'rowId\',1);\n                editFieldsDialog.dialog( "open" );\n\n            }\n\n            function addUserWindow(listener,topgrid){\n                var winHeight = 400; //Math.round(window.innerHeight * .50)\n                var winWidth = 810;//Math.round(window.innerWidth * .50)\n                var grid_name = \'jgGrid4Users\';\n                var pager_name = "jqGridPager4Users";\n                var grid_name_by_id = \'#\'+grid_name;\n                var pager_name_by_id = \'#\'+pager_name;\n                if ($(grid_name_by_id).length){\n                    $(grid_name_by_id).remove();\n                    $(pager_name_by_id).remove();\n                }\n\n                var newDiv = $(document.createElement(\'div\'));\n                newDiv.html(\'<table id="\'+grid_name+\'"></table> <div id="\'+pager_name+\'"> </div>\');\n\n                var createUsersSticky = newDiv.dialog({\n                    autoOpen: false,\n                    title: "Double click to add a user",\n                    height: winHeight - 20,\n                    width: winWidth,\n                    modal: true,\n                    close: function () {\n                    }\n                });\n                var grid = new jQuery(grid_name_by_id);\n                grid.jqGrid({\n                    url: \'admin/getUsers\',\n                    mtype: "GET",\n                    datatype: "json",\n                    page: 1,\n                    colModel: [\n                        {label: "User Name", name: \'username\', key: true, width: 150},\n                        {label: "Email", name: \'email\', width: 150}\n                    ],\n                    loadonce: true,\n                    viewrecords: true,\n                    width: 780,\n                    height: 250,\n                    rowNum: 10,\n                    pager: pager_name_by_id,\n                    ondblClickRow: function (rowId) {\n                        doDoubleClick(rowId)\n                    },\n\n                });\n                grid.navGrid(pager_name_by_id, {\n                    search: true,\n                    add: false,\n                    edit: false,\n                    del: false,\n                    refresh: true\n                }, {}, {}, {}, {multipleSearch: true,});\n\n                function doDoubleClick(rowId) {\n                    var rowData = jQuery(grid_name_by_id).getRowData(rowId);\n                    alert(rowData[\'username\']);\n                    $.ajax({\n                        type: "GET",\n                        url: "')
        __M_writer(escape(tg.url('/admin/addUsersToListener')))
        __M_writer('"+"?id="+listener+"&username="+rowData[\'username\'],\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                            $.alert("Success adding user ", { autoClose:true,});\n                            topgrid.trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                        },\n                        error: function() {\n                        $.alert("Error accessing traffic/addPending", { autoClose:false,});\n                        return true;\n                        },\n                        complete: function() {\n\n                        }\n                    });\n                    createUsersSticky.dialog("close");\n                }\n                createUsersSticky.dialog("open");\n            }\n\n\n            function doDoubleClick(rowId){\n                function assignFmatter ( cellvalue, options, rowObject )\n                {\n                    switch (cellvalue){\n                        case cellvalue=0:\n                            html=\'')
        __M_writer(escape(_('NONE')))
        __M_writer("';\n                            break;\n                        case cellvalue=1:\n                            html='")
        __M_writer(escape(_('IMEI')))
        __M_writer("';\n                            break;\n                        case cellvalue=2:\n                            html='")
        __M_writer(escape(_('EVENT ID')))
        __M_writer("';\n                            break;\n                        case cellvalue=3:\n                            html='")
        __M_writer(escape(_('EVENT DESC')))
        __M_writer("';\n                            break;\n                        case cellvalue=4:\n                            html='")
        __M_writer(escape(_('LATITUDE')))
        __M_writer("';\n                            break;\n                        case cellvalue=5:\n                            html='")
        __M_writer(escape(_('LONGITUDE')))
        __M_writer("';\n                            break;\n                        case cellvalue=6:\n                            html='")
        __M_writer(escape(_('SPEED')))
        __M_writer("';\n                            break;\n                        case cellvalue=7:\n                            html='")
        __M_writer(escape(_('AZIMUTH')))
        __M_writer("';\n                            break;\n                        case cellvalue=8:\n                            html='")
        __M_writer(escape(_('VALID')))
        __M_writer("';\n                            break;\n                        case cellvalue=9:\n                            html='")
        __M_writer(escape(_('DATE TIME')))
        __M_writer("';\n                            break;\n                        case cellvalue=10:\n                            html='")
        __M_writer(escape(_('CLIENT ID')))
        __M_writer("';\n                            break;\n                        case cellvalue=11:\n                            html='")
        __M_writer(escape(_('VEHICLE')))
        __M_writer("';\n                            break;\n                        case cellvalue=12:\n                            html='")
        __M_writer(escape(_('VOLTAGE')))
        __M_writer("';\n                            break;\n                        case cellvalue=13:\n                            html='")
        __M_writer(escape(_('INTERNAL ID')))
        __M_writer("';\n                            break;\n                        case cellvalue=14:\n                            html='")
        __M_writer(escape(_('CLIENT ID')))
        __M_writer('\';\n                            break;\n\n                    }\n                return html;\n                }\n                var winHeight=Math.round(window.innerHeight*.50);\n                var winWidth=Math.round(window.innerWidth*.85);\n                        // Event Routines\n                var listener_fields_grid_name = \'#jqGridListenerFields\';\n                var listener_fields_grid_pager= \'#listFieldsTables\';\n                var listener_fields_load_url=\'/admin/loadListenerFieldsAdmin/\'+"?id="+rowId;\n                var listener_fields_update_url=\'/admin/updateListenerFieldsAdmin\';\n                var listener_fields_addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: listener_fields_update_url, closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var listener_fields_editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: listener_fields_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    alert(\'The "Edit" button was clicked with rowid=\' + rowid);\n                    }\n                };\n                var listener_fields_deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: listener_fields_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var listener_fields_viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: listener_fields_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var listener_fields_searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: listener_fields_update_url,modal: true, };\n                var listener_fields_grid = jQuery(listener_fields_grid_name);\n                listener_fields_grid.jqGrid({\n                url: listener_fields_load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: [\'id\', \'')
        __M_writer(escape(_('Field')))
        __M_writer("', '")
        __M_writer(escape(_('Value')))
        __M_writer("','")
        __M_writer(escape(_('Assigned')))
        __M_writer("','")
        __M_writer(escape(_('Multiplier')))
        __M_writer("','")
        __M_writer(escape(_('Unit')))
        __M_writer('\'],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'field\', index: \'field\', width: 25,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'value\', index: \'value\', width: 25,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'assign\', index: \'assign\', width: 15,align: \'right\',hidden: false, editable: true, edittype: \'text\', formatter:assignFmatter, editrules: {required: true}},\n                    {name: \'multiplier\', index: \'multiplier\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'unit\', index: \'value\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                ],\n                pager: jQuery(listener_fields_grid_pager),\n                rowNum: 15,\n                loadonce: true,\n                rowList: [15, 50, 100],\n                sortname: \'field\',\n                sortorder: "asc",\n                viewrecords: true,\n                width: winWidth-40,\n                height: winHeight-160,\n\n                ondblClickRow: function(rowId) {\n                    var rowData = jQuery(this).getRowData(rowId);\n                    $.ajax({\n                        type: "GET",\n                        url: "')
        __M_writer(escape(tg.url('/admin/loadAssignFormTemplate')))
        __M_writer('",\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'field\':rowData[\'field\'],\'value\':rowData[\'value\'],\'assigned\':rowData[\'assign\'],\'multiplier\':rowData[\'multiplier\'],\'unit\':rowData[\'unit\'],\'row\':rowData[\'id\'] },\n                        success: function(parameterdata) {\n                            //Insert HTML code\n                            $( "#addAssignForm" ).html(parameterdata.assignformtemplate);\n                        },\n                        error: function() {\n                            alert("Error accessing server /admin/loadAssignFormTemplate")\n                        },\n                        complete: function() {\n                        }\n                    });\n\n\n                    var winHeight=Math.round(window.innerHeight*.50);\n                    var winWidth=Math.round(window.innerWidth*.56);\n                    var assignDialog = $( "#addAssignForm" ).dialog({\n                            autoOpen: false,\n                            height: winHeight,\n                            width: winWidth,\n                            modal: true,\n                            buttons: {\n                                "')
        __M_writer(escape(_('Update')))
        __M_writer('": function() {\n                                    var row = $(this).data(\'rowId\');\n                                    var assign = $(this).data(\'assign\');\n                                    var multiplier = $(\'#multiplier\').val();\n                                    var unit = $(\'#unit\').val();\n                                    var selopt=$( "#selectedassigned" ).val();\n                                    $.ajax({\n                                    type: "GET",\n                                    url: "')
        __M_writer(escape(tg.url('/admin/updateListenerFields')))
        __M_writer('"+"?record="+rowId+"&assigment="+selopt+"&multiplier="+multiplier+"&unit="+unit,\n                                    contentType: "application/json; charset=utf-8",\n                                    data: { \'param\':\'gaugeParameters\' },\n                                    success: function(parameterdata) {\n                                        listener_fields_grid.trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                                    },\n                                    error: function() {\n                                        alert("Error accessing server /admin/updateListenerFields")\n                                    },\n                                    complete: function() {\n                                    }\n                                    });\n                                    assignDialog.dialog( "close" );\n                                },\n                                Cancel: function() {\n                                    assignDialog.dialog( "close" );\n                                }\n                            },\n                            close: function() {\n                                //form[ 0 ].reset();\n                                //allFields.removeClass( "ui-state-error" );\n                            }\n                        });\n\n                    assignDialog.dialog( "open" );\n                    },\n                });\n                listener_fields_grid.jqGrid(\'navGrid\',listener_fields_grid_pager,{edit:false,add:false,del:false, search:true},\n                            listener_fields_editParams,\n                            listener_fields_addParams,\n                            listener_fields_deleteParams,\n                            listener_fields_searchParams,\n                            listener_fields_viewParams)\n                $("#listenerFieldsGrid01").show();\n                var editFieldsDialog = $( "#listenerFieldsGrid01" ).dialog({\n                    autoOpen: false,\n                    height: winHeight,\n                    width: winWidth,\n                    modal: true,\n                    close: function() {\n                        listener_fields_grid.jqGrid(\'GridUnload\');\n                    }\n                });\n                $("#listenerFieldsGrid01").trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                editFieldsDialog.data(\'rowId\',1);\n                editFieldsDialog.dialog( "open" );\n            }\n\n\n            function changeState() {\n            var grid = jQuery(grid_name);\n            var rowKey = grid.getGridParam("selrow");\n            if (rowKey){\n                $.ajax({\n                    type: "GET",\n                    url: "')
        __M_writer(escape(tg.url('/admin/updateListenerState')))
        __M_writer('"+"?id="+rowKey+"&user=')
        __M_writer(escape(user))
        __M_writer('",\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'param\':\'gaugeParameters\' },\n                    success: function(data) {\n                        // data.value is the success return json. json string contains key value\n                        return true;\n                    },\n                    error: function() {\n                    //alert("#"+ckbid);\n                        alert("Error accesing /admin/updatelistenerstate")\n                        return true;\n                    },\n                    complete: function() {\n                    }\n                 });\n                }\n            else\n                alert("No rows are selected");\n            }\n            var listenerclient = Stomp.client(\'')
        __M_writer(escape(h.stompServer()))
        __M_writer('\');\n            listenerclient.debug=null;\n            var listener_connect_callback = function() {\n                listenerclient.subscribe("/topic/adminlistener", listener_subscribe_callback);\n                // called back after the client is connected and authenticated to the STOMP server\n              };\n            var listener_error_callback = function(error) {\n            };\n            var listener_subscribe_callback = function(message) {\n\n                var msg = message.body;\n                var payload = msg.split(\'|\');\n                var command = payload[0];\n                var data = payload[1];\n                switch (command) {\n                        case \'RELOAD\':\n                            $("#jgGridListeners").trigger( \'reloadGrid\' );\n                            break;\n                        case \'NEW\':\n                            $("#jgGridListeners").trigger( \'reloadGrid\' );\n                            $.alert("Listener has been trigger, now you can assign data", { autoClose:false,type: \'success\',});\n                            bell.play();\n                            break;\n                }\n              };\n            listenerclient.connect(\'')
        __M_writer(escape(h.whoami()))
        __M_writer("', '")
        __M_writer(escape(h.password()))
        __M_writer('\', listener_connect_callback, listener_error_callback, \'/\');\n            </script>\n</div>\n    <!-- page start-->\n    <!-- Hidden POP UP Start-->\n    <div id="UserGrid" class="dialog-hidden" title="')
        __M_writer(escape(_('Listener Fields')))
        __M_writer('">\n        <table style="width:100%;overflow:auto;">\n        <table id="jqGridUser" class="scroll" cellpadding="0" cellspacing="0"></table>\n        <div id="UserTables" class="scroll" style="text-align:center;"></div>\n        <div id="UserPTables" class="scroll" style="text-align:center;"></div>\n        </table>\n        <br>\n    </div>\n    <div id="listenerFieldsGrid01" class="dialog-hidden" title="')
        __M_writer(escape(_('Listener Fields')))
        __M_writer('">\n        <table style="width:100%;overflow:auto;">\n        <table id="jqGridListenerFields" class="scroll" cellpadding="0" cellspacing="0"></table>\n        <div id="listFieldsTables" class="scroll" style="text-align:center;"></div>\n        <div id="listPlistenerFields" class="scroll" style="text-align:center;"></div>\n        </table>\n        <br>\n    </div>\n    <div id="addAssignForm" class="dialog-hidden" title="Field Assigment">\n    </div>\n    <!-- Hidden POP UP End-->\n    <div id="noteContent" title="')
        __M_writer(escape(_('Basic dialog')))
        __M_writer('">\n    </div>\n    <!-- JQGRID table start-->\n    <table style="width:100%">\n    <table id="jgGridListeners" class="scroll" cellpadding="0" cellspacing="0"></table>\n    <div id="listPagerListeners" class="scroll" style="text-align:center;"></div>\n    <div id="listPsetcolsListener" class="scroll" style="text-align:center;"></div>\n    </table>\n    <br>\n\n  <!-- page end-->')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"line_map": {"17": 0, "26": 1, "27": 5, "28": 5, "29": 34, "30": 34, "31": 35, "32": 35, "33": 36, "34": 36, "35": 53, "36": 53, "37": 53, "38": 53, "39": 53, "40": 53, "41": 53, "42": 53, "43": 53, "44": 53, "45": 84, "46": 84, "47": 85, "48": 85, "49": 93, "50": 93, "51": 94, "52": 94, "53": 115, "54": 115, "55": 116, "56": 116, "57": 160, "58": 160, "59": 160, "60": 160, "61": 189, "62": 189, "63": 190, "64": 190, "65": 271, "66": 271, "67": 297, "68": 297, "69": 300, "70": 300, "71": 303, "72": 303, "73": 306, "74": 306, "75": 309, "76": 309, "77": 312, "78": 312, "79": 315, "80": 315, "81": 318, "82": 318, "83": 321, "84": 321, "85": 324, "86": 324, "87": 327, "88": 327, "89": 330, "90": 330, "91": 333, "92": 333, "93": 336, "94": 336, "95": 339, "96": 339, "97": 367, "98": 367, "99": 367, "100": 367, "101": 367, "102": 367, "103": 367, "104": 367, "105": 367, "106": 367, "107": 390, "108": 390, "109": 413, "110": 413, "111": 421, "112": 421, "113": 476, "114": 476, "115": 476, "116": 476, "117": 495, "118": 495, "119": 520, "120": 520, "121": 520, "122": 520, "123": 525, "124": 525, "125": 533, "126": 533, "127": 544, "128": 544, "134": 128}, "uri": "/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/admin/listener.mak", "filename": "/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/admin/listener.mak", "source_encoding": "utf-8"}
__M_END_METADATA
"""
