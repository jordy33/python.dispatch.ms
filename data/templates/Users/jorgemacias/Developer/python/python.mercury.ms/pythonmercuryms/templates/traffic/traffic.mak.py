# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1529000831.584888
_enable_loop = True
_template_filename = '/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak'
_template_uri = '/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        user = context.get('user', UNDEFINED)
        attended_statistic = context.get('attended_statistic', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        toattend_statistic = context.get('toattend_statistic', UNDEFINED)
        closed_statistic = context.get('closed_statistic', UNDEFINED)
        list = context.get('list', UNDEFINED)
        tg = context.get('tg', UNDEFINED)
        score_statistic = context.get('score_statistic', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('<script src="')
        __M_writer(escape(tg.url('/justgage/raphael-2.1.4.min.js')))
        __M_writer('"></script>\n<script src="')
        __M_writer(escape(tg.url('/justgage/justgage.js')))
        __M_writer('"></script>\n<script src="')
        __M_writer(escape(tg.url('/jqueryrotate/jQueryRotate.js')))
        __M_writer('"></script>\n<script src="')
        __M_writer(escape(tg.url('/timepicker/jquery-ui-timepicker-addon.js')))
        __M_writer('"></script>\n<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBWs-R7lvNo7pooz56iQOqrfQXq0BbIfgo"\nasync defer></script>\n\n<style type="text/css">\n    .ui-timepicker-div .ui-widget-header { margin-bottom: 8px; }\n    .ui-timepicker-div dl { text-align: left; }\n    .ui-timepicker-div dl dt { float: left; clear:left; padding: 0 0 0 5px; }\n    .ui-timepicker-div dl dd { margin: 0 10px 10px 40%; }\n    .ui-timepicker-div td { font-size: 90%; }\n    .ui-tpicker-grid-label { background: none; border: none; margin: 0; padding: 0; }\n    .ui-timepicker-div .ui_tpicker_unit_hide{ display: none; }\n\n    .ui-timepicker-div .ui_tpicker_time .ui_tpicker_time_input { background: none; color: inherit; border: none; outline: none; border-bottom: solid 1px #555; width: 95%; }\n    .ui-timepicker-div .ui_tpicker_time .ui_tpicker_time_input:focus { border-bottom-color: #aaa; }\n\n    .ui-timepicker-rtl{ direction: rtl; }\n    .ui-timepicker-rtl dl { text-align: right; padding: 0 5px 0 0; }\n    .ui-timepicker-rtl dl dt{ float: right; clear: right; }\n    .ui-timepicker-rtl dl dd { margin: 0 40% 10px 10px; }\n\n    /* Shortened version style */\n    .ui-timepicker-div.ui-timepicker-oneLine { padding-right: 2px; }\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_time,\n    .ui-timepicker-div.ui-timepicker-oneLine dt { display: none; }\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_time_label { display: block; padding-top: 2px; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl { text-align: right; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd,\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd > div { display:inline-block; margin:0; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_minute:before,\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_second:before { content:\':\'; display:inline-block; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_millisec:before,\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_microsec:before { content:\'.\'; display:inline-block; }\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_unit_hide,\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_unit_hide:before{ display: none; }\n    link { color: #0000EE; }\n\n    .text{\n        position:relative;\n        left:190px;\n        top:0px;\n        width:290px;\n        font-size:14px;\n        color:black;\n\n    }\n    .imgContainer{\n        float:left;\n    }\n\n    .azimuthimage {\n        position: relative;\n    }\n\n    .azimuthimage .base {\n       position: absolute;\n       top: 0;\n       left: 0;\n\n       z-index : 0;\n        width: 300px;\n       height: 221px;\n    }\n\n    .azimuthimage .overlay{\n       position: absolute;\n       top: 55px;\n       left:    81px;\n       width: 105px;\n       height: 105px;\n    }\n\n    div.dialog-hidden { display:none}\n    div.redsquare    { border: solid 10px red; width: 67px; height: 10px; }\n    div.orangesquare { border: solid 10px orange; width: 67px; height: 10px;}\n    div.yellowsquare { border: solid 10px yellow; width: 67px; height: 10px;}\n    div.greensquare  { border: solid 10px green; width: 67px; height: 10px; }\n    div.bluesquare   { border: solid 10px blue; width: 67px; height: 10px; }\n</style>\n<script>\n            var attendedGage= new JustGage({\n                id: "attendedGauge",\n                value: ')
        __M_writer(escape(attended_statistic))
        __M_writer(',\n                min: 0,\n                max: 100,\n                title: "')
        __M_writer(escape(_('Attended')))
        __M_writer('"\n            });\n            var toAttendGage = new JustGage({\n                id: "toAttendGauge",\n                value: ')
        __M_writer(escape(toattend_statistic))
        __M_writer(',\n                min: 0,\n                max: 100,\n                title: "')
        __M_writer(escape(_('To Attend')))
        __M_writer('"\n            });\n            var closedGage = new JustGage({\n                id: "closedGauge",\n                value: ')
        __M_writer(escape(closed_statistic))
        __M_writer(',\n                min: 0,\n                max: 100,\n                title: "')
        __M_writer(escape(_('Closed')))
        __M_writer('"\n            });\n            var scoreGage = new JustGage({\n                id: "scoreGauge",\n                value: ')
        __M_writer(escape(score_statistic))
        __M_writer(',\n                min: 0,\n                max: 100,\n                levelColors : [ \t"#FF0000","#c18c05", "#98C105" ],\n                title: "')
        __M_writer(escape(_('Score')))
        __M_writer('"\n            });\n            function dateFmatter ( cellvalue, options, rowObject )\n            {\n                var utcDate=moment.utc(cellvalue,"YYYY-MM-DD h:mm:ss")\n                var localDate=moment(utcDate).local();\n                var formatdate = localDate.format("YYYY-MM-DD HH:mm:ss");\n                return formatdate;\n            }\n            function statusFmatter ( cellvalue, options, rowObject ){\n                html=cellvalue;\n                switch (cellvalue){\n                    case cellvalue="A":\n                        html = \'<center><span class="glyphicon glyphicon-search" style="color:blue"></span></center>\';\n                        break;\n                    case cellvalue="N":\n                        html = \'<center><span class="glyphicon glyphicon-remove" style="color:red"></span></center>\';\n                        break;\n                    case cellvalue="C":\n                        html = \'<center><span class="glyphicon glyphicon-ok" style="color:green"></span></center>\';\n                        break;\n                    case cellvalue="P":\n                        html = \'<center><span class="glyphicon glyphicon-time" style="color:sandybrown"></span></center>\';\n                        break;\n                }\n                return html;\n            }\n            function priorityFmatter ( cellvalue, options, rowObject )\n            {\n                html=cellvalue;\n\n                switch (cellvalue){\n\n                    case cellvalue=1:\n                        html=\'<center><div class="redsquare" style="text-align:center"> <img/> </div></center>\';\n                        break;\n                    case cellvalue=2:\n                        html=\'<center><div class="orangesquare"> <img/> </div></center>\';\n                        break;\n                    case cellvalue=3:\n                        html=\'<center><div class="yellowsquare"> <img/> </div></center>\';\n                        break;\n                    case cellvalue=4:\n                        html=\'<center><div class="greensquare"> <img/> </div></center>\'\n                        break;\n                    case cellvalue=5:\n                        html=\'<center><div class="bluesquare"> <img/> </div></center>\';\n                        break;\n                }\n                return html;\n            }\n            var c5Plates=\'\'\n            var grid_name = \'#jqGridAlerts\';\n            var grid_pager= \'#listPagerAlerts\';\n            var update_url=\'/traffic/updateTraffic/?user=')
        __M_writer(escape(user))
        __M_writer("';\n            var load_url='/traffic/loadTraffic/?user=")
        __M_writer(escape(user))
        __M_writer("';\n            //var header_container='")
        __M_writer(escape(_('Alerts')))
        __M_writer('\';\n            var addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: update_url, closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    }\n                };\n            var deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: update_url,modal: true, };\n            var grid = jQuery(grid_name);\n\n            $(document).ready(function () {\n                grid.jqGrid({\n                url: load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: [\'')
        __M_writer(escape(_('Hidden')))
        __M_writer("', '")
        __M_writer(escape(_('Status')))
        __M_writer("', '")
        __M_writer(escape(_('Priority')))
        __M_writer("', '")
        __M_writer(escape(_('Client')))
        __M_writer("', '")
        __M_writer(escape(_('Event')))
        __M_writer("', '")
        __M_writer(escape(_('Event Description')))
        __M_writer("','")
        __M_writer(escape(_('Vehicle')))
        __M_writer("','")
        __M_writer(escape(_('Date')))
        __M_writer('\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Listener\',\'User\'],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'attended_state\', index: \'attended_state\', width: 2,align: \'right\',hidden: false, editable: true, edittype: \'text\', formatter:statusFmatter, editrules: {required: true},search:false},\n                    {name: \'priority\', index: \'priority\', width: 7,align: \'right\',hidden: false, editable: true, edittype: \'text\', formatter:priorityFmatter, editrules: {required: true},search:false},\n                    {name: \'user_name\',index: \'user_name\',width: 25,align: \'right\',hidden: false,editable: true,edittype: \'text\',editrules: {required: false}},\n                    {name: \'event_id\',index: \'event_id\',width: 5,align: \'right\',hidden: false,editable: true,edittype: \'text\',editrules: {required: false}},\n                    {name: \'event_desc\',index: \'event_desc\', width: 25, align: \'right\',hidden: false,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'vehicle\',index: \'vehicle\',width: 25,align: \'right\',editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'time_stamp\',index: \'time_stamp\', width: 14, align: \'right\',hidden: false,editable: true, edittype: \'text\', formatter:dateFmatter,editrules: {required: false}},\n                    {name: \'attended_time\',index: \'attended_time\', width: 30, align: \'right\',hidden: true,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'pending_time\',index: \'pending_time\', width: 30, align: \'right\',hidden: true,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'closed_time\',index: \'closed_time\', width: 30, align: \'right\',hidden: true,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'user_id\',index: \'user_id\', width: 5, align: \'right\', hidden: true, editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'imei\',index: \'imei\', width: 5, align: \'right\', hidden: true, editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'latitude\',index: \'latitude\',width: 5, align: \'right\',hidden: true, editable: true, edittype: \'text\', editrules: {required: false}},\n                    {name: \'longitude\',index: \'longitude\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                    {name: \'speed\',index: \'speed\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                    {name: \'azimuth\',index: \'azimuth\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                    {name: \'listener\',index: \'listener\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                    {name: \'user\',index: \'user\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                ],\n                pager: jQuery(grid_pager),\n                rowNum: 10,\n                rowList: [10, 50, 100],\n                sortname: \'time_stamp\',\n                sortorder: "desc",\n                viewrecords: true,\n                autowidth: true,\n                height: 250,\n                ondblClickRow: function(rowId) {\n                    doDoubleClick(rowId)\n                },\n                //caption: header_container,\n            });\n            grid.jqGrid(\'navGrid\',grid_pager,{edit:false,add:false,del:false, search:true},\n                            editParams,\n                            addParams,\n                            deleteParams,\n                            searchParams,\n                            viewParams);\n            // add custom button\n            grid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-plus",\n                    title: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    position: "first",\n                    onClickButton: AddCallerEvent\n                });\n\n\n            });\n            $.extend($.jgrid.nav,{alerttop:1});\n            function doDoubleClick(rowId){\n                var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                var listenerNumber=rowData[\'listener\'];\n                var attendedState=rowData[\'attended_state\'];\n\n                var winHeight=Math.round(window.innerHeight*.77)\n                var winWidth=Math.round(window.innerWidth*.86)\n                var SplitText = "')
        __M_writer(escape(_('Title')))
        __M_writer('"\n                var $dialog = $(\'<div></div>\') /* Dialog for Instalation Report*/\n                    .html(SplitText )\n                    .dialog({\n                        autoOpen: false,\n                        modal: true,\n                        height: winHeight-50,\n                        width:  winWidth-100,\n                        close: function(event,ui){\n                            $dialog.hide();\n                            $(this).hide();\n                        },\n                        title: \'Installation Report:\'}\n                        );\n                function updateState(rowId,state){\n                    $.ajax({\n                        type: "GET",\n                        url: "')
        __M_writer(escape(tg.url('/traffic/updateTrafficStatus')))
        __M_writer('"+"?record="+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&state="+state+"&comment="+$("#comment").val()+"&false_alarm="+$(\'#alarmcheck\').is(\':checked\'),\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                            // data.value is the success return json. json string contains key value\n                            //{\'user\': \'dispatch\', \'toattend_statistic\': 0, \'score_statistic\': 99.99450277609807, \'attended_statistic\': 1, \'closed_statistic\': 18190}\n                            attendedGage.refresh(data.attended_statistic);\n                            toAttendGage.refresh(data.toattend_statistic);\n                            closedGage.refresh(data.closed_statistic);\n                            scoreGage.refresh(data.score_statistic);\n                            var res=$("#comment").val();\n                            var st=$(\'#alarmcheck\').is(\':checked\');\n                            $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                            activateTab(\'eventData\');\n                            $(\'#commentForm\')[0].reset();\n                            return true;\n                        },\n                        error: function() {\n                        //alert("#"+ckbid);\n                            alert("Error accessing /traffic/updateTrafficStatus")\n                            return true;\n                        },\n                        complete: function() {\n                        }\n                        });\n                    return true;\n\n                }\n                function PoP() {\n                                var row = $(this).data(\'rowId\');\n                                var putpendigDialog = $( "#putpendingForm" ).dialog({\n                                        autoOpen: false,\n                                        height: winHeight-100,\n                                        width: winWidth-200,\n                                        modal: true,\n                                        buttons: {\n                                            Submit: function() { //submit\n                                                function SpellChecker3(parameter) {\n                                                   var isSuccess = false;\n                                                   $.ajax({ url: "')
        __M_writer(escape(tg.url('/traffic/spellChecker')))
        __M_writer('"+"?text="+parameter,\n                                                            data: {},\n                                                            async: false,\n                                                            success:\n                                                                function(parameterdata) {\n                                                                     if (parameterdata.error=="ok"){\n                                                                                isSuccess=true\n                                                                            }\n                                                                            else{\n                                                                                $.alert(parameterdata.error);\n                                                                                isSuccess=false;\n                                                                            }\n                                                   }\n                                                          });\n                                                    return isSuccess;\n                                                }\n                                                jQuery.validator.addMethod("wordCountPending", function(value, element, params){\n                                                    return (SpellChecker3(value));\n                                                }, "A minimum of 10 words are required");\n                                                //add the custom validation method\n\n                                                $( "#pendingForm" ).validate({\n                                                                  rules: {\n                                                                       pendingcomment:{required:true, wordCountPending: [\'10\']},\n                                                                      }\n                                                                });\n                                                if($("#pendingForm").valid()){   // test for validity\n                                                  var row = $(this).data(\'rowId\');\n                                                  updateState(row,"P");\n                                                  $( this ).dialog( "close" );\n                                                  var pc = $(\'#pendingcomment\').val();\n                                                  $.ajax({\n                                                                type: "GET",\n                                                                url: "')
        __M_writer(escape(tg.url('/traffic/addPending')))
        __M_writer('"+"?id="+row+"&comment="+pc,\n                                                                contentType: "application/json; charset=utf-8",\n                                                                data: { \'param\':\'gaugeParameters\' },\n                                                                success: function(data) {\n                                                                // data.value is the success return json. json string contains key value\n\n                                                                    $.alert("Pending Successfull ", { autoClose:true,});\n                                                                    $(\'#pendingForm\')[0].reset();\n                                                                },\n                                                                error: function() {\n                                                                $.alert("Error accessing traffic/addPending", { autoClose:false,});\n                                                                return true;\n                                                                },\n                                                                complete: function() {\n\n                                                                }\n                                                  });\n                                                  trafficDialog.dialog( "close" );\n                                                  $( this ).dialog( "close" );\n                                                }\n                                            },\n                                            Cancel: function() { //cancel\n                                                $(\'#pendingForm\')[0].reset();\n                                                $( this ).dialog( "close" );\n                                            }\n                                        }\n                                        ,\n                                        close: function() {\n                                            $(\'#commentForm\')[0].reset();\n                                            //form[ 0 ].reset();\n                                            //allFields.removeClass( "ui-state-error" );\n                                        }\n                                 });\n                                putpendigDialog.data("rowId",row);\n                                putpendigDialog.dialog( "open" );\n                                //trafficDialog.dialog( "close" );\n                            };\n                function activateTab(tab){\n                    $(\'.nav-tabs a[href="#\' + tab + \'"]\').tab(\'show\');\n                };\n                function initMap(latitude,longitude){\n                    var myLatLng = {lat: latitude, lng: longitude};\n                   // var myLatLng = new google.maps.LatLng(latitude, longitude);\n                    map = new google.maps.Map(document.getElementById("map_canvas"), {\n                      zoom: 12,\n                      center: myLatLng\n                    });\n                     var marker = new google.maps.Marker({\n                              position: myLatLng,\n                              map: map\n                            });\n                    marker.setMap(map);\n                    google.maps.event.trigger(map, \'resize\');\n                    $("#map_canvas").css("width", Math.round(window.innerHeight*.40)).css("height", Math.round(window.innerHeight*.40));\n\n                    $(\'a[data-toggle="tab"]\').on(\'shown.bs.tab\', function (e) {\n                      var target = $(e.target).attr("href") // activated tab\n\n                        if (target===\'#locationMap\'){\n                            google.maps.event.trigger(map, \'resize\');\n                            map.setCenter(marker.getPosition());\n                        }\n\n                    });\n                }\n                var buttons = {\n                };\n                buttons["')
        __M_writer(escape(_('Alarma C5')))
        __M_writer('"]=  function() {\n                            var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                            var c5_vehicle=rowData[\'vehicle\'];\n                            var c5_imei=rowData[\'imei\'];\n                            var c5_latitude=rowData[\'latitude\'];\n                            var c5_longitude=rowData[\'longitude\'];\n                            var c5_speed=rowData[\'speed\'];\n                            var c5_heading=rowData[\'azimuth\'];\n                            var c5_plates=c5plates;\n\n                            $(\'#C5Vehicle\').text(c5_vehicle);\n                            $(\'#C5Imei\').text(c5_imei);\n                            $(\'#C5Plates\').text(c5_plates);\n                            $(\'#C5Latitude\').text(c5_latitude);\n                            $(\'#C5Longitude\').text(c5_longitude);\n                            $(\'#C5Speed\').text(c5_speed);\n                            $(\'#C5Heading\').text(c5_heading);\n\n                            var createC5Dialog = $( "#createC5Form" ).dialog({\n                                    autoOpen: false,\n                                    height: winHeight-20,\n                                    width: winWidth,\n                                    modal: true,\n                                    buttons: {\n                                        Cancel: function() {\n                                        createC5Dialog.dialog( "close" );\n                                        },\n                                        "')
        __M_writer(escape(_('Enviar Alerta')))
        __M_writer('": function() {\n                                            if (confirm(\'Esta seguro de enviar la alerta al C5 ?\')) {\n                                                $.ajax({\n                                                    type: "GET",\n                                                    url: "')
        __M_writer(escape(tg.url('/traffic/send2C5')))
        __M_writer('"+"?vehicle="+c5_vehicle+"&imei="+c5_imei+"&plates="+c5_plates+"&latitude="+c5_latitude+"&longitude="+c5_longitude+"&speed="+c5_speed+"&heading="+c5_heading,\n                                                    contentType: "application/json; charset=utf-8",\n                                                    data: { \'param\':\'gaugeParameters\' },\n                                                    success: function(data) {\n                                                    // data.value is the success return json. json string contains key value\n\n                                                        $.alert("Alarma enviada exitosamente", { autoClose:false,});\n                                                        $(\'#createTicketForm\')[0].reset();\n                                                    },\n                                                    error: function() {\n                                                    $.alert("Error accediendo alerta/enviar al c5", { autoClose:false,});\n                                                    return true;\n                                                    },\n                                                    complete: function() {\n\n                                                    }\n                                                 });\n                                            } else {\n                                                // Do nothing!\n                                            }\n\n                                            createC5Dialog.dialog( "close" );\n                                        }\n                                    },\n\n                                    close: function() {\n                                        //form[ 0 ].reset();\n                                        //allFields.removeClass( "ui-state-error" );\n                                    }\n                            });\n                            createC5Dialog.data("rowId",rowId);\n                            createC5Dialog.data("state",atst);\n                            createC5Dialog.dialog( "open" );\n                            //trafficDialog.dialog( "close" );\n                        };\n                buttons["')
        __M_writer(escape(_('Add Image')))
        __M_writer('"]=  function() {\n                                var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                                var traffic_id=rowData[\'id\'];\n                                $(\'#imagesForm\').attr(\'action\', "traffic/uploadImage?traffic_id="+traffic_id);\n                                var winHeight=Math.round(window.innerHeight*.5);\n                                var winWidth=Math.round(window.innerWidth*.6);\n                                var addFilter01Buttons = {\n                                            "')
        __M_writer(escape(_('Close')))
        __M_writer('": function() {\n                                                addFilter01Dialog.dialog( "close" );\n                                            }\n                                };\n                                var addFilter01Dialog = $( "#addImageForm" ).dialog({\n                                        autoOpen: false,\n                                        height: winHeight-100,\n                                        width: winWidth-200,\n                                        modal: true,\n                                        buttons: addFilter01Buttons,\n                                        close: function() {\n                                            //form[ 0 ].reset();\n                                            //allFields.removeClass( "ui-state-error" );\n                                        }\n                                 });\n                                addFilter01Dialog.data(\'rowId\',1);\n                                addFilter01Dialog.dialog( "open" );\n                                //trafficDialog.dialog( "open" );\n                            };\n\n                buttons["')
        __M_writer(escape(_('Put on Pending')))
        __M_writer('"]=  PoP;\n\n\n                //if(listenerNumber==4) {\n                buttons["')
        __M_writer(escape(_('Create Ticket')))
        __M_writer('"]=  function() {\n                                var row = $(this).data(\'rowId\');\n                                $(\'#lastReport\').datetimepicker({\n                                    dateFormat: \'yy/mm/dd\',\n                                timeFormat: "hh:mm:ss"});\n                                var createTicketDialog = $( "#createTicketForm" ).dialog({\n                                        autoOpen: false,\n                                        height: winHeight-20,\n                                        width: winWidth,\n                                        modal: true,\n                                        buttons: {\n                                            Cancel: function() {\n                                            createTicketDialog.dialog( "close" );\n                                            },\n                                            "')
        __M_writer(escape(_('Create Ticket')))
        __M_writer('": function() {\n                                                    function SpellChecker2(parameter) {\n                                                       var isSuccess = false;\n                                                       $.ajax({ url: "')
        __M_writer(escape(tg.url('/traffic/spellChecker')))
        __M_writer('"+"?text="+parameter,\n                                                                data: {},\n                                                                async: false,\n                                                                success:\n                                                                    function(parameterdata) {\n                                                                         if (parameterdata.error=="ok"){\n                                                                                    isSuccess=true\n                                                                                }\n                                                                                else{\n                                                                                    $.alert(parameterdata.error)\n                                                                                    isSuccess=false;\n                                                                                }\n                                                       }\n                                                              });\n                                                        return isSuccess;\n                                                    }\n                                                    jQuery.validator.addMethod("wordCount2", function(value, element, params){\n                                                        return (SpellChecker2(value));\n                                                    }, "A minimum of 10 words are required");\n                                                    //add the custom validation method\n\n                                                    $( "#ticketForm" ).validate({\n                                                      rules: {\n                                                           ticket:{required:true,\n                                                               wordCount2: [\'10\']\n                                                           },\n                                                          }\n                                                    });\n\n                                                    if($("#ticketForm").valid()) {\n                                                        var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                                                        var recordId=rowData[\'id\'];\n                                                        var ticketComment = $(\'#ticket\').val();\n                                                        var lastReport=$(\'#lastReport\').val();\n                                                        $.ajax({\n                                                                type: "GET",\n                                                                url: "')
        __M_writer(escape(tg.url('/traffic/addTicket')))
        __M_writer('"+"?id="+recordId+"&comment="+ticketComment+"&lastReport="+lastReport,\n                                                                contentType: "application/json; charset=utf-8",\n                                                                data: { \'param\':\'gaugeParameters\' },\n                                                                success: function(data) {\n                                                                // data.value is the success return json. json string contains key value\n\n                                                                    $.alert("Ticket "+data.Ticket+" created sucessfully", { autoClose:false,});\n                                                                    $(\'#createTicketForm\')[0].reset();\n                                                                },\n                                                                error: function() {\n                                                                $.alert("Error accessing tables/addPriority", { autoClose:false,});\n                                                                return true;\n                                                                },\n                                                                complete: function() {\n\n                                                                }\n                                                             });\n                                                        createTicketDialog.dialog( "close" );\n                                                    }\n                                            }\n                                        },\n\n                                        close: function() {\n                                            //form[ 0 ].reset();\n                                            //allFields.removeClass( "ui-state-error" );\n                                        }\n                                });\n                                createTicketDialog.data("rowId",rowId);\n                                createTicketDialog.data("state",atst);\n                                createTicketDialog.dialog( "open" );\n                                //trafficDialog.dialog( "close" );\n                            };\n                //}\n                buttons["')
        __M_writer(escape(_('Finalize')))
        __M_writer('"]=  function() {\n                                var callerEventState = $(this).data(\'ces\');\n                                if (callerEventState=="N"){\n                                    $.alert("You are not authorized to finalize", { autoClose:false,});\n                                }\n                                else{\n                                    $(\'#finalizeForm\').dialog(\'option\', \'buttons\', submitFinalizeButtons);\n                                    var row = $(this).data(\'rowId\');\n                                    finalizeDialog.data(\'rowId\',row);\n                                    finalizeDialog.dialog( "open" );\n                                }\n\n                            };\n\n                var trafficDialog = $( "#trafficForm" ).dialog({\n                        autoOpen: false,\n                        height: winHeight,\n                        width: winWidth,\n                        modal: true,\n                        buttons: buttons,\n                        closeOnEscape:false,\n                        close: function() {\n                            //form[ 0 ].reset();\n                            //allFields.removeClass( "ui-state-error" );\n                        },\n\n\n                    });\n                var finalizeButtons = {\n                            "')
        __M_writer(escape(_('Exit')))
        __M_writer('": function() {\n                                $(\'#commentForm\')[0].reset();\n                                finalizeDialog.dialog( "close" );\n                            }\n                };\n                var submitFinalizeButtons = {\n                            "')
        __M_writer(escape(_('Submit')))
        __M_writer('": function() {\n                            function SpellChecker(parameter) {\n                               var isSuccess = false;\n                               $.ajax({ url: "')
        __M_writer(escape(tg.url('/traffic/spellChecker')))
        __M_writer('"+"?text="+parameter,\n                                        data: {},\n                                        async: false,\n                                        success:\n                                            function(parameterdata) {\n                                                 if (parameterdata.error=="ok"){\n                                                            isSuccess=true\n                                                        }\n                                                        else{\n                                                            $.alert(parameterdata.error)\n                                                            isSuccess=false;\n                                                        }\n                               }\n                                      });\n                                return isSuccess;\n                            }\n                            jQuery.validator.addMethod("wordCount", function(value, element, params){\n                                return (SpellChecker(value));\n                            }, "A minimum of 10 words are required");\n                            //add the custom validation method\n                            $( "#commentForm" ).validate({\n                                              rules: {\n                                                   comment:{required:true, wordCount: [\'10\']},\n                                                  }\n                                            });\n                            if($("#commentForm").valid()){   // test for validity\n                             var row = $(this).data(\'rowId\');\n                             updateState(row,\'C\');\n                             finalizeDialog.dialog( "close" );\n                             trafficDialog.dialog( "close" );\n                                }\n                            },\n                            "')
        __M_writer(escape(_('Exit')))
        __M_writer('": function() {\n                                $(\'#commentForm\')[0].reset();\n                                finalizeDialog.dialog( "close" );\n                                }\n                            };\n                var finalizeDialog = $( "#finalizeForm" ).dialog({\n                        autoOpen: false,\n                        height: winHeight-100,\n                        width: winWidth-200,\n                        modal: true,\n                        buttons: finalizeButtons,\n                        close: function() {\n                            $(\'#commentForm\')[0].reset();\n                            //form[ 0 ].reset();\n                            //allFields.removeClass( "ui-state-error" );\n                        }\n                 });\n                var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                var atst=rowData[\'attended_state\'];\n                var azimuth=rowData[\'azimuth\'];\n                var degrees=parseInt(azimuth);\n                var eventdescript=rowData[\'event_desc\'];\n                var vehicledescript=rowData[\'vehicle\'];\n                var eventtime=rowData[\'time_stamp\'];\n                $("#compassNeedle").rotate(degrees);\n                $("#eventHeading").text(eventdescript);\n                $("#vehicleDescription").text(vehicledescript);\n                $("#eventTime").text(eventtime);\n                $("#degreesAzimuth").html(\'<p>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\'+degrees+String.fromCharCode(176)+\'</p>\');\n                var urlinstall=\'\';\n                $.ajax({\n                type: "GET",\n                url: "')
        __M_writer(escape(tg.url('/traffic/getRecord')))
        __M_writer('"+"?record="+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('",\n                contentType: "application/json; charset=utf-8",\n                data: { \'param\':\'gaugeParameters\' },\n                success: function(parameterdata) {\n                    //Insert HTML code\n                    $("#account").html(parameterdata.account);\n                    $("#event").html(parameterdata.event);\n                    $("#vehicle").html(parameterdata.vehicle);\n                    $("#callerList").html(parameterdata.callerlist);\n                    $("#accountHistory").html(parameterdata.accounthistory);\n                    $("#comment").val(parameterdata.comment);\n                    $("#alarmcheck").val(parameterdata.false_alarm);\n                    $("#eventLink").html(parameterdata.platform);\n                    $("#images").html(parameterdata.images);\n                    // Render time in local\n                    $(\'#ts\').text(dateFmatter(parameterdata.ts));\n                    $(\'#et\').text(dateFmatter(parameterdata.et));\n                    $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                    $("#trafficForm").show();\n                    $("#dialog").dialog();\n                    c5plates=parameterdata.plates;\n                    urlinstall=parameterdata.link;\n                    initMap(parameterdata.latitude, parameterdata.longitude);\n                    activateTab(\'account\');\n                    if (parameterdata.attended_state=="C"){\n                        $(\'#finalizeForm\').dialog(\'option\', \'buttons\', finalizeButtons);\n                        finalizeDialog.dialog( "open" );\n                    }\n                    else{\n                        if(parameterdata.attended_state=="N"){\n                            updateState(rowId,"A");\n                        }\n                    //get other data\n                    trafficDialog.data("rowId",rowId);\n                    trafficDialog.data("state",atst);\n                    trafficDialog.data("ces",parameterdata.callerEventState);\n                    trafficDialog.dialog( "open" );\n                    }\n                },\n                error: function (xhr, ajaxOptions, thrownError) {\n                    if (xhr.status==503){\n                        alert("Servicio no disponible en pluton")\n                    }\n                    else{\n                        alert(xhr.status);\n                        alert(thrownError);\n                    }\n                  },\n                complete: function() {\n                    $(\'#button\').on(\'click\', function(e){\n                        if(urlinstall!=\'dontHave\'){\n                            $dialog.dialog(\'open\');\n                            $dialog.html("<iframe width=\'100%\' height=\'100%\' src=\'"+urlinstall+"\' frameborder=\'0\' border=\'none\'></iframe>");\n                        }else{\n                            $.alert("Do not have info");\n                        }\n\n                        });\n                }\n                });\n            }\n            function AddCallerEvent() {\n            }\n            </script>\n</div>\n    <!-- page start-->\n    <div id="callerEventForm01"  class="dialog-hidden" title="')
        __M_writer(escape(_('Traffic')))
        __M_writer('">\n    </div>\n    <div id="callerEventGrid01" class="dialog-hidden" title="')
        __M_writer(escape(_('Caller Event')))
        __M_writer('">\n        <table style="width:100%;overflow:auto;">\n        <table id="jqGridCallerEvent" class="scroll" cellpadding="0" cellspacing="0"></table>\n        <div id="listPagerTables" class="scroll" style="text-align:center;"></div>\n        <div id="listPsetcolsEvent" class="scroll" style="text-align:center;"></div>\n        </table>\n        <br>\n    </div>\n\n    <!-- Hidden POP UP start-->\n     <div id="addImageForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Upload Image')))
        __M_writer('">\n        <form action="alerts/uploadImage" name= "imagesForm" id="imagesForm" method="POST" enctype="multipart/form-data">\n        <input type="hidden" name="pagename" py:attrs="value=pagename"/>\n        <label for="upload_file">')
        __M_writer(escape(_('Filename')))
        __M_writer(':</label>\n            <br>\n            <p>')
        __M_writer(escape(_('Upload Image')))
        __M_writer(':  ')
        __M_writer(escape(_('Only')))
        __M_writer(' (jpeg,bmp and png)</p>\n            <br>\n        <input type="file" name="file" id="file" accept="image/vnd-wap-wbmp,image/png, image/jpeg" required/>  <br/>\n        <input type="submit" name="submit_upload" value="Upload"/>\n        </form>\n    </div>\n    <div id="trafficForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Traffic')))
        __M_writer('">\n        <ul class="nav nav-tabs">\n          <li class="active"><a data-toggle="tab" href="#account">')
        __M_writer(escape(_('Account')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#event" >')
        __M_writer(escape(_('Event')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#vehicle" >')
        __M_writer(escape(_('Vehicle')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#callerList" >')
        __M_writer(escape(_('Caller List')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#accountHistory">')
        __M_writer(escape(_('Account History')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#images">')
        __M_writer(escape(_('Images')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#installationReport">')
        __M_writer(escape(_('Installation Report')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#locationMap" data-toggle="tab">')
        __M_writer(escape(_('Map')))
        __M_writer('</a></li>\n\n        </ul>\n\n        <div class="tab-content">\n          <div id="account" class="tab-pane fade in active">\n          </div>\n          <div id="event" class="tab-pane fade in active">\n          </div>\n          <div id="vehicle" class="tab-pane fade in active">\n          </div>\n          <div id="callerList" class="tab-pane fade">\n          </div>\n          <div id="accountHistory" class="tab-pane fade">\n          </div>\n          <div id="images" class="tab-pane fade">\n\n\n          </div>\n          <div id="installationReport" class="tab-pane fade">\n              <br>\n              <button id="button" type="button" class="btn  "data-toggle="button">')
        __M_writer(escape(_('Print')))
        __M_writer('</button>\n          </div>\n\n\n          <div id="locationMap" class="tab-pane fade">\n\n              <h4 id="eventHeading">')
        __M_writer(escape(_('Event')))
        __M_writer('</h4>\n\n              <div class="image123">\n                    <div class="imgContainer">\n                        <div id="map_canvas"></div>\n                    </div>\n                    <div class="imgContainer">\n                        <div class="azimuthimage">\n                           <img src="')
        __M_writer(escape(tg.url('/img/noneedlecompass.png')))
        __M_writer('" class="base"/>\n                           <img src="')
        __M_writer(escape(tg.url('/img/needle.png')))
        __M_writer('" id="compassNeedle" class="overlay" style="z-index: 1" />\n                        </div>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <p id="degreesAzimuth">')
        __M_writer(escape(_('Degress')))
        __M_writer('</p>\n                    </div>\n                    <div class="imgContainer">\n                        <span class="text" id="vehicleDescription">')
        __M_writer(escape(_('Vehicle')))
        __M_writer('</span></div><br>\n                        <span class="text" id="eventTime">')
        __M_writer(escape(_('Event Time')))
        __M_writer('</span></div>\n                        <span class="text" id="eventLink">')
        __M_writer(escape(_('Link')))
        __M_writer('</span></div>\n                    </div>\n              </div>\n          </div>\n        </div>\n    </div>\n    <div id="finalizeForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Finalize')))
        __M_writer('">\n      <form id="commentForm">\n        <fieldset>\n            <select id="helpComment" name="helpComment">\n')
        for item in list:
            __M_writer('                    <option id="')
            __M_writer(escape(item['id']))
            __M_writer('" value="')
            __M_writer(escape(item['hcomment']))
            __M_writer('">')
            __M_writer(escape(item['hcomment']))
            __M_writer('</option>\n')
        __M_writer('            </select>\n            <br>\n            <label for="comment">')
        __M_writer(escape(_('Comment')))
        __M_writer(':</label>\n            <textarea class="form-control" rows="8" id="comment" name="comment" required onpaste="return false;" onCopy="return false" onCut="return false"></textarea>\n            <div class="checkbox">\n              <label><input type="checkbox" id="alarmcheck" value="">')
        __M_writer(escape(_('False Alarm')))
        __M_writer('</label>\n            </div>\n        </fieldset>\n      </form>\n    </div>\n    <div id="putpendingForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Pending Comment')))
        __M_writer('">\n      <form id="pendingForm">\n        <fieldset>\n            <select id="helpComment2" name="helpComment">\n')
        for item in list:
            __M_writer('                    <option id="')
            __M_writer(escape(item['id']))
            __M_writer('" value="')
            __M_writer(escape(item['hcomment']))
            __M_writer('">')
            __M_writer(escape(item['hcomment']))
            __M_writer('</option>\n')
        __M_writer('            </select>\n            <br>\n            <label for="pendingcomment">')
        __M_writer(escape(_('Comment')))
        __M_writer(':</label>\n            <textarea class="form-control" rows="7" id="pendingcomment" name="pendingcomment" required onpaste="return false;" onCopy="return false" onCut="return false"></textarea>\n        </fieldset>\n      </form>\n    </div>\n    <div id="createTicketForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Create Ticket')))
        __M_writer('">\n      <form id="ticketForm">\n        <fieldset>\n            <label for="ticket">')
        __M_writer(escape(_('Comment')))
        __M_writer(':</label>\n            <textarea class="form-control" rows="12" id="ticket" name="ticket" required onpaste="return false;" onCopy="return false" onCut="return false"></textarea>\n            <br>\n            <!-- <label for="lastReport">')
        __M_writer(escape(_('Last Report')))
        __M_writer(':</label>\n            <input type="text" name="lastReport" id="lastReport" value="" required> End-->\n        </fieldset>\n      </form>\n    </div>\n    <div id="createC5Form" class="dialog-hidden" title="')
        __M_writer(escape(_('Datos para enviar al C5')))
        __M_writer('">\n        <h3>Campos:</h3>\n        <dl class="dl-horizontal">\n            <dt>Vehiculo:</dt>\n            <dd id="C5Vehicle"></dd>\n            <dt>IMEI:</dt>\n            <dd id="C5Imei"></dd>\n            <dt>Placas:</dt>\n            <dd id="C5Plates"></dd>\n            <dt>Latitud:</dt>\n            <dd id="C5Latitude"></dd>\n            <dt>Longitud:</dt>\n            <dd id="C5Longitude"></dd>\n            <dt>Velocidad:</dt>\n            <dd id="C5Speed"></dd>\n            <dt>Dirección:</dt>\n            <dd id="C5Heading"></dd>\n            <dt>Válido:</dt>\n            <dd>1</dd>\n            <dt>Estado:</dt>\n            <dd>1</dd>\n        </dl>\n    </div>\n    <!-- Hidden POP UP End-->\n<div id="noteContent" title="')
        __M_writer(escape(_('Basic dialog')))
        __M_writer('">\n</div>\n    <!-- JQGRID table start-->\n    <table style="width:100%">\n    <table id="jqGridAlerts" class="scroll" cellpadding="0" cellspacing="0"></table>\n    <div id="listPagerAlerts" class="scroll" style="text-align:center;"></div>\n    <div id="listPsetcols" class="scroll" style="text-align:center;"></div>\n    </table>\n    <br>\n    <!-- Gauge Meters-->\n    <div class="row">\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="attendedGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="toAttendGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="closedGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="scoreGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n    </div>\n  <!-- page end-->')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"line_map": {"17": 0, "30": 1, "31": 1, "32": 1, "33": 2, "34": 2, "35": 3, "36": 3, "37": 4, "38": 4, "39": 86, "40": 86, "41": 89, "42": 89, "43": 93, "44": 93, "45": 96, "46": 96, "47": 100, "48": 100, "49": 103, "50": 103, "51": 107, "52": 107, "53": 111, "54": 111, "55": 165, "56": 165, "57": 166, "58": 166, "59": 167, "60": 167, "61": 184, "62": 184, "63": 184, "64": 184, "65": 184, "66": 184, "67": 184, "68": 184, "69": 184, "70": 184, "71": 184, "72": 184, "73": 184, "74": 184, "75": 184, "76": 184, "77": 229, "78": 229, "79": 230, "80": 230, "81": 245, "82": 245, "83": 262, "84": 262, "85": 262, "86": 262, "87": 301, "88": 301, "89": 334, "90": 334, "91": 401, "92": 401, "93": 428, "94": 428, "95": 432, "96": 432, "97": 467, "98": 467, "99": 474, "100": 474, "101": 494, "102": 494, "103": 498, "104": 498, "105": 512, "106": 512, "107": 515, "108": 515, "109": 551, "110": 551, "111": 584, "112": 584, "113": 613, "114": 613, "115": 619, "116": 619, "117": 622, "118": 622, "119": 654, "120": 654, "121": 686, "122": 686, "123": 686, "124": 686, "125": 752, "126": 752, "127": 754, "128": 754, "129": 764, "130": 764, "131": 767, "132": 767, "133": 769, "134": 769, "135": 769, "136": 769, "137": 775, "138": 775, "139": 777, "140": 777, "141": 778, "142": 778, "143": 779, "144": 779, "145": 780, "146": 780, "147": 781, "148": 781, "149": 782, "150": 782, "151": 783, "152": 783, "153": 784, "154": 784, "155": 805, "156": 805, "157": 811, "158": 811, "159": 819, "160": 819, "161": 820, "162": 820, "163": 832, "164": 832, "165": 835, "166": 835, "167": 836, "168": 836, "169": 837, "170": 837, "171": 843, "172": 843, "173": 847, "174": 848, "175": 848, "176": 848, "177": 848, "178": 848, "179": 848, "180": 848, "181": 850, "182": 852, "183": 852, "184": 855, "185": 855, "186": 860, "187": 860, "188": 864, "189": 865, "190": 865, "191": 865, "192": 865, "193": 865, "194": 865, "195": 865, "196": 867, "197": 869, "198": 869, "199": 874, "200": 874, "201": 877, "202": 877, "203": 880, "204": 880, "205": 885, "206": 885, "207": 909, "208": 909, "214": 208}, "uri": "/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak", "filename": "/Users/jorgemacias/Developer/python/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak", "source_encoding": "utf-8"}
__M_END_METADATA
"""
