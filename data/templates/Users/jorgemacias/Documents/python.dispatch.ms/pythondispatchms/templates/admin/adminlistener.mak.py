# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1555371617.003455
_enable_loop = True
_template_filename = '/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/adminlistener.mak'
_template_uri = '/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/adminlistener.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        tg = context.get('tg', UNDEFINED)
        h = context.get('h', UNDEFINED)
        user = context.get('user', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('<style type="text/css">\n</style>\n<script>\n            var bell = new Audio("')
        __M_writer(escape(tg.url('/sounds/ding.mp3')))
        __M_writer('");\n            function dateFmatter ( cellvalue, options, rowObject )\n            {\n                var utcDate=moment.utc(cellvalue,"YYYY-MM-DD h:mm:ss")\n                var localDate=moment(utcDate).local();\n                var formatdate = localDate.format("YYYY-MM-DD HH:mm:ss");\n                return formatdate;\n            }\n            function statusFmatter ( cellvalue, options, rowObject ){\n                html=cellvalue;\n                if ( cellvalue=="0"){html = \'<center><span class="glyphicon glyphicon-remove" style="color:red"></span></center>\';}\n                if ( cellvalue=="1"){html = \'<center><span class="glyphicon glyphicon-ok" style="color:green"></span></center>\';}\n                return html;\n            }\n                var username = \'dispatch\';\n                var password = \'managepass\';\n\n                function make_base_auth(user, password) {\n                    var tok = user + \':\' + password;\n                    var hash = btoa(tok);\n                    return "Basic " + hash;\n                }\n                $.ajaxSetup({\n                    beforeSend: function (xhr)\n                    {\n                    xhr.setRequestHeader("Content-Type","application/json");\n                    xhr.setRequestHeader("Accept","application/json");\n                    xhr.setRequestHeader( "Authorization", make_base_auth(username,password));\n                    }\n                });\n            var grid_name = \'#jgGridListeners\';\n            var grid_pager= \'#listPagerListeners\';\n            var load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadListenerAdmin?user=')
        __M_writer(escape(user))
        __M_writer("';\n            var update_url='")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateListenerAdmin?user=')
        __M_writer(escape(user))
        __M_writer("';\n            //var header_container='")
        __M_writer(escape(_('Alerts')))
        __M_writer('\';\n            var addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    }\n                };\n            var deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: update_url,modal: true, };\n            var listenergrid = jQuery(grid_name);\n\n            $(document).ready(function () {\n                listenergrid.jqGrid({\n                url: load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: ["')
        __M_writer(escape(_('Hidden')))
        __M_writer('", "')
        __M_writer(escape(_('Listener ID')))
        __M_writer('", "')
        __M_writer(escape(_('Description')))
        __M_writer('", "')
        __M_writer(escape(_('Time Stamp')))
        __M_writer('","')
        __M_writer(escape(_('State')))
        __M_writer('","')
        __M_writer(escape(_('Log State')))
        __M_writer('"],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'listener_id\',index: \'listener_id\',width: 25,align: \'right\',hidden: false,editable: false,edittype: \'text\',editrules: {required: false}},\n                    {name: \'name\',index: \'name\', width: 25, align: \'right\',hidden: false,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'time_stamp\',index: \'time_stamp\', width: 14, align: \'right\',hidden: false,editable: false, edittype: \'text\', formatter:dateFmatter,editrules: {required: false}},\n                    {name: \'state\', index: \'state\', width: 8,align: \'right\',hidden: false, editable: false, edittype: \'text\', formatter:statusFmatter, editrules: {required: true},search:false},\n                    {name: \'logstate\', index: \'logstate\', width: 8,align: \'right\',hidden: false, editable: false, edittype: \'text\', formatter:statusFmatter, editrules: {required: true},search:false},\n                ],\n                pager: jQuery(grid_pager),\n                rowNum: 10,\n                rowList: [10, 50, 100],\n                sortname: \'time_stamp\',\n                sortorder: "desc",\n                viewrecords: true,\n                autowidth: true,\n                height: 250,\n                ondblClickRow: function(rowId) {\n                    listenerFieldsMapper(rowId)\n                },\n                //caption: header_container,\n            });\n            listenergrid.jqGrid(\'navGrid\',grid_pager,{edit:true,add:false,del:true, search:true},\n                            editParams,\n                            addParams,\n                            deleteParams,\n                            searchParams,\n                            viewParams);\n            // add custom button\n            listenergrid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-arrow-2-n-s",\n                    title: "')
        __M_writer(escape(_('Log State')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Log State')))
        __M_writer('",\n                    position: "first",\n                    onClickButton: changeLogListenerState\n                }\n            );\n            listenergrid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-arrow-2-n-s",\n                    title: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    position: "first",\n                    onClickButton: changeListenerState\n                }\n            );\n\n            listenergrid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-person",\n                    title: "')
        __M_writer(escape(_('Grupos')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Grupos')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:  function(rowId) {\n                         var rowKey = listenergrid.getGridParam("selrow");\n                         if (rowKey){\n                             var rowData = listenergrid.getRowData(rowKey);\n                             addUser(rowData[\'id\'],rowData[\'listener_id\']);\n                         }\n                        else{\n                            alert("No rows are selected");\n                            }\n\n                        },\n                }\n            );\n\n            listenergrid.navButtonAdd(grid_pager,\n                {\n                    buttonicon: "ui-icon-flag",\n                    title: "')
        __M_writer(escape(_('Eventos')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Eventos')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:  function(rowId) {\n                         var rowKey = listenergrid.getGridParam("selrow");\n                         if (rowKey){\n                             var rowData = listenergrid.getRowData(rowKey);\n                             addEvents(rowData[\'id\'],rowData[\'listener_id\']);\n                         }\n                        else{\n                            alert("No rows are selected");\n                            }\n\n                        },\n                }\n            );\n\n            }            );\n\n            $.extend($.jgrid.nav,{alerttop:1});\n            function addEvents(rowId,listenerID){\n                var lid=listenerID;\n                var winHeight = 400; //Math.round(window.innerHeight * .50)\n                var winWidth = 810;//Math.round(window.innerWidth * .50)\n                var grid_name = \'jgGrid4Events\';\n                var pager_name = "jqGridPager4Events";\n                var grid_name_by_id = \'#\'+grid_name;\n                var pager_name_by_id = \'#\'+pager_name;\n                if ($(grid_name_by_id).length){\n                    $(grid_name_by_id).remove();\n                    $(pager_name_by_id).remove();\n                }\n\n                var newDiv = $(document.createElement(\'div\'));\n                newDiv.html(\'<table id="\'+grid_name+\'"></table> <div id="\'+pager_name+\'"> </div>\');\n\n                var createUsersSticky = newDiv.dialog({\n                    autoOpen: false,\n                    title: "Agregar Eventos",\n                    height: winHeight ,\n                    width: winWidth ,\n                    modal: true,\n                    close: function () {\n                    }\n                });\n\n\n                var load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer("/admin/loadEvents?listener_id='+listenerID;\n                var update_url='")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateEvents?listener_id=\'+listenerID;\n\n                var header_container=\'Eventos\';\n                var addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    alert(\'The "Edit" button was clicked with rowid=\' + rowid);\n                    }\n                };\n                var deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: update_url,modal: true, };\n                var grid = jQuery(grid_name_by_id);\n                grid.jqGrid({\n                    url: load_url,\n                    datatype: \'json\',\n                    mtype: \'GET\',\n                    colNames: [\'id\',\'Id Evento\', \'Descripción\'],\n                    colModel: [\n                        {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: false}},\n                        {name: \'event_id\', index: \'event_id\', width:5,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                        {name: \'event_desc\', index: \'event_desc\', width:34,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                    ],\n                    pager: jQuery(pager_name_by_id),\n                    rowNum: 10,\n                    rowList: [10, 50, 100],\n                    sortname: \'event_id\',\n                    sortorder: "asc",\n                    viewrecords: true,\n                    height: winHeight-140 ,\n                    width: winWidth-60 ,\n                    caption: header_container,\n\n                });\n                grid.jqGrid(\'navGrid\',pager_name_by_id,{edit:true,add:true,del:true, search:true},\n                                editParams,\n                                addParams,\n                                deleteParams,\n                                searchParams,\n                                viewParams);\n\n                    createUsersSticky.dialog("open");\n\n            }\n\n            function addUser(rowId,listenerID){\n                //var winHeight=Math.round(window.innerHeight*.50);\n                //var winWidth=Math.round(window.innerWidth*.85);\n                var winHeight=450;\n                var winWidth=1000;\n                // Event Routines\n                var user_fields_grid_name = \'#jqGridUser\';\n                var user_fields_grid_pager= \'#UserTables\';\n\n                var user_fields_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer("/admin/loadListenerUsers?id='+rowId;\n                var user_fields_update_url='")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateListenerUsers\';\n                var user_fields_addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: user_fields_update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var user_fields_editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: user_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    alert(\'The "Edit" button was clicked with rowid=\' + rowid);\n                    }\n                };\n                var user_fields_deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: user_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var user_fields_viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: user_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var user_fields_searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: user_fields_update_url,modal: true, };\n                var user_fields_grid = jQuery(user_fields_grid_name);\n                user_fields_grid.jqGrid({\n                    url: user_fields_load_url,\n                    datatype: \'json\',\n                    mtype: \'GET\',\n                    colNames: [\'id\', "')
        __M_writer(escape(_('User Name')))
        __M_writer('","')
        __M_writer(escape(_('State')))
        __M_writer('","')
        __M_writer(escape(_('Finalize Traffic')))
        __M_writer('",\'hidden\'],\n                    colModel: [\n                        {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: false}},\n                        {name: \'user_name\',index: \'user_name\', width: 25, align: \'right\', hidden: false, editable: true, edittype: \'text\',editrules: {required: false}},\n                        {name: \'state\', index: \'state\', width: 5,align: \'right\',hidden: false, editable: true, formatter:statusFmatter,edittype: \'text\', editrules: {required: false}},\n                        {name: \'finalize\', index: \'finalize\', width: 5,align: \'right\',hidden: false, editable: true, formatter:statusFmatter,edittype: \'text\', editrules: {required: false}},\n                        {name: \'userlisteners_id\', index: \'userlisteners_id\', width: 5,align: \'right\',hidden: true},\n                    ],\n                    pager: jQuery(user_fields_grid_pager),\n                    rowNum: 10,\n                    rowList: [10, 50, 100],\n                    sortname: \'user_name\',\n                    sortorder: "asc",\n                    viewrecords: true,\n                    width: winWidth-40,\n                    height: winHeight-145,\n\n                    ondblClickRow: function(this_row) {\n                        var rowData = jQuery("#jqGridUser").getRowData(this_row);\n                        mapExpressions(rowId,rowData[\'id\'],rowData[\'user_name\'],listenerID,rowData[\'userlisteners_id\']);\n                        },\n                    });\n                    user_fields_grid.jqGrid(\'navGrid\',user_fields_grid_pager,{edit:false,add:false,del:true, search:true},\n                                user_fields_editParams,\n                                user_fields_addParams,\n                                user_fields_deleteParams,\n                                user_fields_searchParams,\n                                user_fields_viewParams)\n                    user_fields_grid.navButtonAdd(user_fields_grid_pager,\n                        {\n                            buttonicon: "ui-icon-plus",\n                            title: "')
        __M_writer(escape(_('Add Groups')))
        __M_writer('",\n                            caption: "')
        __M_writer(escape(_('Add Groups')))
        __M_writer('",\n                            position: "last",\n                            onClickButton:function() {\n                               addUserWindow(rowId,user_fields_grid_name)\n                        }\n                    });\n                    user_fields_grid.navButtonAdd(user_fields_grid_pager,\n                        {\n                            buttonicon: "ui-icon-arrow-2-n-s",\n                            title: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                            caption: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                            position: "last",\n                            onClickButton:function() {\n                               var rowKey = user_fields_grid.getGridParam("selrow");\n                               if (rowKey){\n                                   var rowData = user_fields_grid.getRowData(rowKey);\n//                                   addUser(rowData[\'id\'],rowData[\'listener_id\']);\n                                   changeListenerUserState(rowData[\'id\']);\n                               }\n                               else{\n                                   alert("No rows are selected");\n                               }\n                        }\n                    });\n                $("#UserGrid").show();\n                var editFieldsDialog = $( "#UserGrid" ).dialog({\n                    autoOpen: false,\n                    height: winHeight,\n                    width: winWidth,\n                    title: "')
        __M_writer(escape(_('Users for listener ')))
        __M_writer('"+listenerID,\n                    modal: true,\n                    close: function() {\n                        user_fields_grid.jqGrid(\'GridUnload\');\n                    }\n                });\n                $("#UserGrid").trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                editFieldsDialog.data(\'rowId\',1);\n                editFieldsDialog.dialog( "open" );\n\n            }\n\n            function addUserWindow(listener,topgrid){\n                var winHeight = 400; //Math.round(window.innerHeight * .50)\n                var winWidth = 810;//Math.round(window.innerWidth * .50)\n                var grid_name = \'jgGrid4Users\';\n                var pager_name = "jqGridPager4Users";\n                var grid_name_by_id = \'#\'+grid_name;\n                var pager_name_by_id = \'#\'+pager_name;\n                if ($(grid_name_by_id).length){\n                    $(grid_name_by_id).remove();\n                    $(pager_name_by_id).remove();\n                }\n\n                var newDiv = $(document.createElement(\'div\'));\n                newDiv.html(\'<table id="\'+grid_name+\'"></table> <div id="\'+pager_name+\'"> </div>\');\n\n                var createUsersSticky = newDiv.dialog({\n                    autoOpen: false,\n                    title: "Double click to add a user",\n                    height: winHeight - 20,\n                    width: winWidth,\n                    modal: true,\n                    close: function () {\n                    }\n                });\n                var grid = new jQuery(grid_name_by_id);\n                grid.jqGrid({\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/getGroups\',\n                    mtype: "GET",\n                    datatype: "json",\n                    page: 1,\n                    colModel: [\n                        {label: "User Name", name: \'username\', key: true, width: 150},\n                    ],\n                    loadonce: true,\n                    viewrecords: true,\n                    width: 780,\n                    height: 250,\n                    rowNum: 10,\n                    pager: pager_name_by_id,\n                    ondblClickRow: function (rowId) {\n                        doDoubleClick(rowId)\n                    },\n\n                });\n                grid.navGrid(pager_name_by_id, {\n                    search: true,\n                    add: false,\n                    edit: false,\n                    del: false,\n                    refresh: true\n                }, {}, {}, {}, {});\n\n                function doDoubleClick(rowId) {\n\n                    var rowData = jQuery(grid_name_by_id).getRowData(rowId);\n                    $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/addUsersToListener?id=\'+listener+"&username="+rowData[\'username\'],\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                            $.alert("Success adding user ", { autoClose:true,type: \'success\'});\n                            $("#jqGridUser").trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                        },\n                        error: function() {\n                        $.alert("Error accessing traffic/addPending", { autoClose:false,});\n                        return true;\n                        },\n                        complete: function() {\n\n                        }\n                    });\n                    createUsersSticky.dialog("close");\n                }\n                createUsersSticky.dialog("open");\n            }\n\n            function mapExpressions(listener_id,user_id,user_name,listener_name,userlisteners_id){\n                function priorityFmatter ( cellvalue, options, rowObject )\n                {\n                    html=cellvalue;\n                    if ( cellvalue==1){html = \'<center><div style="background-color:red"><div style="color:white">1</div></div></center>\';}\n                    if ( cellvalue==2){html = \'<center><div style="background-color:orange" style="text-align:center">2</div></center>\';}\n                    if ( cellvalue==3){html = \'<center><div style="background-color:yellow" style="text-align:center">3</div></center>\';}\n                    if ( cellvalue==4){html = \'<center><div style="background-color:green"><div style="color:white">4</div></div></center>\';}\n                    if ( cellvalue==5){html = \'<center><div style="background-color:blue"><div style="color:white">5</div></div></center>\';}\n                    return html;\n                }\n                var winHeight = 690; // Math.round(window.innerHeight * .78)\n                var winWidth = 650;// Math.round(window.innerWidth * .40)\n\n                var global_exp_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadGlobalExp?userlisteners_id=\'+userlisteners_id;\n\n                var grid_name_1 = \'jgGridGlobalExp\';\n                var pager_name_1 = "jqGridPageGlobalExp";\n                var grid_name_by_id_1 = \'#\'+grid_name_1;\n                var pager_name_by_id_1 = \'#\'+pager_name_1;\n                if ($(grid_name_by_id_1).length){\n                    $(grid_name_by_id_1).remove();\n                    $(pager_name_by_id_1).remove();\n                }\n\n                var trigger_user_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadTriggerByUser?user_id=\'+user_id;\n                var grid_name_2 = \'jgGridTrigger\';\n                var pager_name_2 = "jqGridPagerTrigger";\n                var grid_name_by_id_2 = \'#\'+grid_name_2;\n                var pager_name_by_id_2 = \'#\'+pager_name_2;\n                if ($(grid_name_by_id_2).length){\n                    $(grid_name_by_id_2).remove();\n                    $(pager_name_by_id_2).remove();\n                }\n\n                var newDiv = $(document.createElement(\'div\'));\n                var code =\'<table id="\'+grid_name_1+\'"></table> <div id="\'+pager_name_1+\'"> </div>\'+\'<br> <div>\'+"')
        __M_writer(escape(_('Triggers for:')))
        __M_writer('"+user_name+\'</div> <br>\'+\n                    \'<table id="\'+grid_name_2+\'"></table> <div id="\'+pager_name_2+\'"> </div>\'\n                newDiv.html(code);\n                var ntitle= "')
        __M_writer(escape(_('Expresiones globales para la escucha')))
        __M_writer('";\n                var createExpWindow = newDiv.dialog({\n                    autoOpen: false,\n                    title:ntitle +\': \'+listener_name,\n                    height: winHeight - 20,\n                    width: winWidth,\n                    modal: true,\n                    close: function () {\n                    }\n                });\n                var grid_1 = new jQuery(grid_name_by_id_1);\n                grid_1.jqGrid({\n                    url: global_exp_load_url,\n                    mtype: "GET",\n                    datatype: "json",\n                    page: 1,\n                    colNames: [\'Id\', "')
        __M_writer(escape(_('Listener Expressions')))
        __M_writer('",\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\'],\n                    colModel: [\n                        {name: \'id\',index: \'id\', align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                        {name: \'expression\', index: \'expression\', align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                        {name: \'expression_id\', index: \'expression_id\', align: \'right\',hidden: true},\n                        {name: \'expression_op\', index: \'expression_op\', align: \'right\',hidden: true},\n                        {name: \'expression_value\', index: \'expression_value\', align: \'right\',hidden: true},\n                        {name: \'explisteners_id\', index: \'explisteners_id\', align: \'right\',hidden: true},\n                    ],\n                    viewrecords: true,\n                    width: 600,\n                    height: 200,\n                    rowNum: 9,\n                    rowList: [9, 10, 100],\n                    sortname: \'id\',\n                    sortorder: "asc",\n                    pager: pager_name_by_id_1,\n                    ondblClickRow: function (rowId) {\n\n                    },\n\n                });\n                grid_1.navGrid(pager_name_by_id_1, {\n                    search: true,\n                    add: false,\n                    edit: false,\n                    del: true,\n                    refresh: true\n                }, {}, {}, {url: \'')
        __M_writer(escape(h.url()))
        __M_writer("/admin/updateGlobalExp/',mtype: 'GET'}, {url: '")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateGlobalExp/\',mtype: \'GET\'},{});\n                //edit,add,delete,search,view\n\n                grid_1.navButtonAdd(pager_name_by_id_1,\n                {\n                    buttonicon: "ui-icon-plus",\n                    title: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:function() { addGlobalExpression(listener_id); }\n                });\n\n                function addGlobalExpression(rowId){\n\n                    $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadExpressionsFormTemplate/\',\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'id\':rowId },\n                        success: function(parameterdata) {\n                            //Insert HTML code\n                            //$( "#addAssignForm" ).html(parameterdata.expressionformtemplate);\n                            var winHeight = 400; //Math.round(window.innerHeight * .50)\n                            var winWidth = 600;//Math.round(window.innerWidth * .50)\n                            var addGlobalExpButtons = {\n                                    "')
        __M_writer(escape(_('Add')))
        __M_writer('": function() {\n                                        var expressionfield = $(\'#selfield option:selected\').filter(\':selected\').text();\n                                        var expressionoperation = $(\'#seloperation option:selected\').filter(\':selected\').text();\n                                        var expressionvalue= encodeURIComponent($(\'#expressionvalue\').val());\n                                        $.ajax({\n                                                type: "GET",\n                                                url:  \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/addGlobalExp\'+"?id="+rowId+"&field="+expressionfield+"&operation="+expressionoperation+"&value="+expressionvalue,\n                                                contentType: "application/json; charset=utf-8",\n                                                data: { \'param\':\'gaugeParameters\' },\n                                                success: function(data) {\n                                                    // data.value is the success return json. json string contains key value\n                                                     $(\'#jgGridGlobalExp\').trigger( \'reloadGrid\' );\n                                                },\n                                                error: function() {\n                                                     $.alert("Error accessing /admin/addGlobalExp", { autoClose:false,});\n                                                    return true;\n                                                },\n                                                complete: function() {\n                                                }\n                                                });\n                                            $(\'#globalExpForm\')[0].reset();\n                                            addUserTriggerDialog.dialog( "close" );\n\n\n                                    },\n                                    "')
        __M_writer(escape(_('Close')))
        __M_writer('": function() {\n                                        $(\'#globalExpForm\')[0].reset();\n                                        addUserTriggerDialog.dialog( "close" );\n                                    }\n                            };\n                            if ($("#addglobalExpForm").length){\n                                $("#addglobalExpForm").remove();\n                            }\n                            var newDiv = $(document.createElement(\'div\'));\n\n                            newDiv.html(parameterdata.expressionformtemplate);\n                            var addUserTriggerDialog = newDiv.dialog({\n                                autoOpen: false,\n                                title:\'Add Listener global expression\',\n                                height: winHeight-100,\n                                width: winWidth-200,\n                                modal: true,\n                                buttons: addGlobalExpButtons,\n                                close: function() {\n                                    //$(\'#globalExpForm\')[0].reset();\n                                    //form[ 0 ].reset();\n                                    //allFields.removeClass( "ui-state-error" );\n                                }\n                             });\n                            addUserTriggerDialog.data(\'rowId\',1);\n                            addUserTriggerDialog.dialog( "open" );\n                        },\n                        error: function() {\n                            alert("Error accessing server /admin/loadExpressionsFormTemplate")\n                        },\n                        complete: function() {\n                        }\n                    });\n\n                }\n\n                // Second Window\n\n                var grid_2 = new jQuery(grid_name_by_id_2);\n                grid_2.jqGrid({\n                    url: trigger_user_load_url,\n                    mtype: "GET",\n                    datatype: "json",\n                    page: 1,\n                    colNames: [\'Id\', "')
        __M_writer(escape(_('User Expressions')))
        __M_writer('","')
        __M_writer(escape(_('Priority')))
        __M_writer('","')
        __M_writer(escape(_('Sound')))
        __M_writer('"],\n                    colModel: [\n                        {name: \'id\',index: \'id\', align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                        {name: \'expression\', index: \'expression\', width: 150, align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                        {name: \'priority\', index: \'priority\', formatter:priorityFmatter, width: 15, align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                        {name: \'sound\', index: \'sound\',  width: 15, align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                    ],\n                    viewrecords: true,\n                    width: 600,\n                    height: 200,\n                    rowNum: 9,\n                    rowList: [9, 10, 100],\n                    sortname: \'id\',\n                    sortorder: "asc",\n                    pager: pager_name_by_id_2,\n                    ondblClickRow: function (this_row) {\n                        var rowData = jQuery("#jgGridTrigger").getRowData(this_row);\n                        addUserFilter(rowData["id"]);\n                    },\n\n                });\n                grid_2.navGrid(pager_name_by_id_2, {\n                    search: true,\n                    add: false,\n                    edit: false,\n                    del: true,\n                    refresh: true\n                }, {}, {}, {url: \'')
        __M_writer(escape(h.url()))
        __M_writer("/admin/updateTriggerByUser',mtype: 'GET'}, {url: '")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateTriggerByUser\',mtype: \'GET\'});\n                grid_2.navButtonAdd(pager_name_by_id_2,\n                {\n                    buttonicon: "ui-icon-plus",\n                    title: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:function() { addTriggerByUser(listener_id); }\n                });\n                function addTriggerByUser(listener_id){\n                $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadTriggerFormTemplate\',\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'id\':listener_id },\n                        success: function(parameterdata) {\n                            //Insert HTML code\n                            //$( "#addAssignForm" ).html(parameterdata.expressionformtemplate);\n\n                            var winHeight = 400; //Math.round(window.innerHeight * .50)\n                            var winWidth = 600;//Math.round(window.innerWidth * .50)\n                            var addTriggerbyUserButtons = {\n                                    "')
        __M_writer(escape(_('Add')))
        __M_writer('": function() {\n                                        var payload_exp=""\n                                        var fields_selected=""\n                                        var element_count = Number(parameterdata.count)\n                                        var element_checked=0\n                                        for (item = 1; item <= element_count; item++) {\n                                            var expression_value=\'#id_chk\'+item;\n                                            if($(expression_value).is(\':checked\')){\n                                                var names = $(expression_value).map(function(){ return this.name; });\n                                                fields_selected=fields_selected+$(expression_value).val()+"|"\n                                                payload_exp=payload_exp+names.get()+" and "\n                                                element_checked++;\n                                            }\n\n                                        }\n                                        if (element_checked>0){\n                                            payload_exp=payload_exp.slice(0, - 5);\n                                            fields_selected=fields_selected.slice(0, - 1);\n                                            payload_exp=encodeURIComponent(payload_exp);\n                                            var priority = $(\'#priority option:selected\').filter(\':selected\').text();\n                                            var sound = $(\'#sound option:selected\').filter(\':selected\').text();\n                                            $.ajax({\n                                                    type: "GET",\n                                                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/addUserTrigger\'+"?user_id="+user_id+"&expression="+payload_exp+"&priority="+priority+"&sound="+sound+"&selectedFields="+fields_selected,\n                                                    contentType: "application/json; charset=utf-8",\n                                                    data: { \'param\':\'gaugeParameters\' },\n                                                    success: function(data) {\n                                                        // data.value is the success return json. json string contains key value\n                                                         $(\'#jgGridTrigger\').trigger( \'reloadGrid\' );\n                                                    },\n                                                    error: function() {\n                                                         $.alert("Error accessing /admin/addGlobalExp", { autoClose:false,});\n                                                        return true;\n                                                    },\n                                                    complete: function() {\n                                                    }\n                                            });\n                                        }\n                                        $(\'#triggerExpForm\')[0].reset();\n                                        addTriggerbyUserDialog.dialog( "close" );\n                                    },\n                                        "')
        __M_writer(escape(_('Close')))
        __M_writer('": function() {\n                                            $(\'#triggerExpForm\')[0].reset();\n                                            addTriggerbyUserDialog.dialog( "close" );\n                                    }\n                            };\n\n                            if ($("#addTriggerForm").length){\n                                $("#addTriggerForm").remove();\n                            }\n                            var newDiv = $(document.createElement(\'div\'));\n\n                            newDiv.html(parameterdata.triggerformtemplate);\n                            var addTriggerbyUserDialog = newDiv.dialog({\n                                autoOpen: false,\n                                title: "')
        __M_writer(escape(_('User Expressions')))
        __M_writer('",\n                                height: winHeight-100,\n                                width: winWidth-200,\n                                modal: true,\n                                buttons: addTriggerbyUserButtons,\n                                close: function() {\n                                    //$(\'#globalExpForm\')[0].reset();\n                                    //form[ 0 ].reset();\n                                    //allFields.removeClass( "ui-state-error" );\n                                }\n                             });\n                            addTriggerbyUserDialog.data(\'rowId\',1);\n                            addTriggerbyUserDialog.dialog( "open" );\n                        },\n                        error: function() {\n                            alert("Error accessing server /admin/loadTriggerFormTemplate")\n                        },\n                        complete: function() {\n                        }\n                    });\n\n                }\n\n\n                createExpWindow.dialog("open");\n            }\n\n            function addUserFilter(trigger_id){\n                function actionFmatter ( cellvalue, options, rowObject ){\n                    html=cellvalue;\n                    if ( cellvalue=="0"){html = \'<center><div style="background-color:red"><div style="color:white">DISCARD</div></div></center>\';}\n                    if ( cellvalue=="1"){html = \'<center><div style="background-color:green"><div style="color:white">KEEP</div></div></center>\';}\n                    return html;\n                }\n                function filterNameFmatter ( cellvalue, options, rowObject ){\n                    html=cellvalue;\n                    if ( cellvalue==1){html =\'<center><div style="background-color:blue"><div style="color:white">Event Counter</div></div></center>\';}\n                    return html;\n                }\n                var winHeight=450;\n                var winWidth=1000;\n\n                var user_filter_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadFilterByUser?user_trigger_id=\'+trigger_id\n                var grid_name_1 = \'jgGridUserFilter\';\n                var pager_name_1 = "jqGridPageUserFilter";\n                var grid_name_by_id_1 = \'#\'+grid_name_1;\n                var pager_name_by_id_1 = \'#\'+pager_name_1;\n                if ($(grid_name_by_id_1).length){\n                    $(grid_name_by_id_1).remove();\n                    $(pager_name_by_id_1).remove();\n                }\n                var newDiv = $(document.createElement(\'div\'));\n                newDiv.html(\'<table id="\'+grid_name_1+\'"></table> <div id="\'+pager_name_1+\'"> </div>\');\n\n                var createExpWindow = newDiv.dialog({\n                    autoOpen: false,\n                    title: "')
        __M_writer(escape(_('Filter Expressions')))
        __M_writer('",\n                    height: winHeight - 20,\n                    width: winWidth,\n                    modal: true,\n                    close: function () {\n                    }\n                });\n                var grid_1 = new jQuery(grid_name_by_id_1);\n                grid_1.jqGrid({\n                    url: user_filter_load_url,\n                    datatype: \'json\',\n                    mtype: \'GET\',\n                    colNames: [\'id\', "')
        __M_writer(escape(_('Filter name')))
        __M_writer('", "')
        __M_writer(escape(_('Expression')))
        __M_writer('","')
        __M_writer(escape(_('Action')))
        __M_writer('","')
        __M_writer(escape(_('Enviar a Venus cuando en una hora')))
        __M_writer('","')
        __M_writer(escape(_('Counter')))
        __M_writer('"],\n                    colModel: [\n                        {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: false}},\n                        {name: \'filter_id\',index: \'filter_id\', width: 20, align: \'right\', hidden: false, editable: true, formatter:filterNameFmatter, edittype: \'text\',editrules: {required: false}},\n                        {name: \'expression\',index: \'expression\', width: 40, align: \'right\', hidden: false, editable: true, edittype: \'text\',editrules: {required: false}},\n                        {name: \'action\', index: \'action\', width: 7,align: \'right\',hidden: false, editable: true, formatter:actionFmatter,edittype: \'text\', editrules: {required: false}},\n                        {name: \'reset_expression\',index: \'reset_expression\', width: 40, align: \'right\', hidden: false, editable: true, edittype: \'text\',editrules: {required: false}},\n                        {name: \'counter\',index: \'counter\', width: 5, align: \'right\', hidden: true, editable: true, edittype: \'text\',editrules: {required: false}},\n                    ],\n                    pager: jQuery(pager_name_by_id_1),\n                    rowNum: 10,\n                    rowList: [10, 50, 100],\n                    sortname: \'expression\',\n                    sortorder: "asc",\n                    viewrecords: true,\n                    width: winWidth-40,\n                    height: winHeight-145,\n\n                    ondblClickRow: function(this_row) {\n                        var rowData = jQuery("#jgGridUserFilter").getRowData(this_row);\n                        mapExpressions(rowId,rowData[\'id\'],rowData[\'user_name\']);\n                        },\n                    });\n                grid_1.navGrid(pager_name_by_id_1, {\n                    search: true,\n                    add: false,\n                    edit: false,\n                    del: true,\n                    refresh: true\n\n                }, {}, {}, {url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateFilterByUser\',mtype: \'GET\'}, {multipleSearch: true,},{});\n\n                grid_1.navButtonAdd(pager_name_by_id_1,\n                {\n                    buttonicon: "ui-icon-plus",\n                    title: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:function(this_row) {\n                        var rowData = jQuery("#jqGridUser").getRowData(this_row);\n                        addUserFilterWidget(trigger_id);\n                    }\n\n                });\n                createExpWindow.dialog("open");\n            }\n            function addUserFilterWidget(trigger_id){\n                $.ajax({\n                    type: "GET",\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadUserFilterTemplate\',\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'id\':trigger_id },\n                    success: function(parameterdata) {\n                        //Insert HTML code\n                        //$( "#addAssignForm" ).html(parameterdata.expressionformtemplate);\n                        var winHeight = 400; //Math.round(window.innerHeight * .50)\n                        var winWidth = 600;//Math.round(window.innerWidth * .50)\n                        var addGlobalExpButtons = {\n                                "')
        __M_writer(escape(_('Add')))
        __M_writer('": function() {\n                                    var filteroperation =\'\';//encodeURIComponent( $(\'#seloperation option:selected\').filter(\':selected\').text());\n                                    var fieldvalue= encodeURIComponent($(\'#fieldvalue\').val());\n                                    var action = \'\';//encodeURIComponent($(\'#action option:selected\').filter(\':selected\').text());\n                                    var resetoperation = \'\';//encodeURIComponent($(\'#resetoperation option:selected\').filter(\':selected\').text());\n                                    var resetvalue= encodeURIComponent($(\'#resetfieldvalue\').val());\n\n                                    $.ajax({\n                                            type: "GET",\n                                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/addUserTriggerFilter?id=\'+trigger_id+"&filteroperation="+filteroperation+"&fieldvalue="+fieldvalue+"&action="+action+"&resetoperation="+resetoperation+"&resetvalue="+resetvalue,\n                                            contentType: "application/json; charset=utf-8",\n                                            data: { \'param\':\'gaugeParameters\' },\n                                            success: function(data) {\n                                                // data.value is the success return json. json string contains key value\n                                                 $(\'#jgGridUserFilter\').trigger( \'reloadGrid\' );\n                                            },\n                                            error: function() {\n                                                 $.alert("Error accessing /admin/addGlobalExp", { autoClose:false,});\n                                                return true;\n                                            },\n                                            complete: function() {\n                                            }\n                                    });\n                                         $(\'#triggerassignForm\')[0].reset();\n                                        addUserTriggerDialog.dialog( "close" );\n\n\n                                },\n                                "')
        __M_writer(escape(_('Close')))
        __M_writer('": function() {\n                                    $(\'#triggerassignForm\')[0].reset();\n                                    addUserTriggerDialog.dialog( "close" );\n                                }\n                        };\n                        if ($("#usertriggerformat").length){\n                            $("#usertriggerformat").remove();\n                        }\n                        var newDiv = $(document.createElement(\'div\'));\n                        newDiv.html(parameterdata.expressionformtemplate);\n                        var addUserTriggerDialog = newDiv.dialog({\n                            autoOpen: false,\n                            title: "')
        __M_writer(escape(_('User Trigger Event Filter')))
        __M_writer('",\n                            height: 300,\n                            width: 400,\n                            modal: true,\n                            buttons: addGlobalExpButtons,\n                            close: function() {\n                                //$(\'#globalExpForm\')[0].reset();\n                                //form[ 0 ].reset();\n                                //allFields.removeClass( "ui-state-error" );\n                            }\n                         });\n                        addUserTriggerDialog.data(\'rowId\',1);\n                        addUserTriggerDialog.dialog( "open" );\n                    },\n                    error: function() {\n                        alert("Error accessing server /admin/loadExpressionsFormTemplate")\n                    },\n                    complete: function() {\n                    }\n                });\n\n            }\n            function listenerFieldsMapper(rowId){\n                function assignFmatter ( cellvalue, options, rowObject )\n                {\n                    if ( cellvalue==0){html = \'NONE\';}\n                    if ( cellvalue==1){html = \'IMEI\';}\n                    if ( cellvalue==2){html = \'EVENT_ID\';}\n                    if ( cellvalue==3){html = \'EVENT_DESC\';}\n                    if ( cellvalue==4){html = \'LATITUDE\';}\n                    if ( cellvalue==5){html = \'LONGITUDE\';}\n                    if ( cellvalue==6){html = \'SPEED\';}\n                    if ( cellvalue==7){html = \'AZIMUTH\';}\n                    if ( cellvalue==8){html = \'VALID\';}\n                    if ( cellvalue==9){html = \'DATETIME\';}\n                    if ( cellvalue==10){html = \'CLIENT_ID\';}\n                    if ( cellvalue==11){html = \'VEHICLE\';}\n                    if ( cellvalue==12){html = \'VOLTAGE\';}\n                    if ( cellvalue==13){html = \'INTERNAL_ID\';}\n                    if ( cellvalue==14){html = \'MCC\';}\n                    if ( cellvalue==15){html = \'MNC\';}\n                    if ( cellvalue==16){html = \'LAC\';}\n                    if ( cellvalue==17){html = \'CELLID\';}\n                  return html;\n                }\n                var winHeight=490;//Math.round(window.innerHeight*.50);\n\n                var winWidth=Math.round(window.innerWidth*.85);\n                        // Event Routines\n                var listener_fields_grid_name = \'#jqGridListenerFields\';\n                var listener_fields_grid_pager= \'#listFieldsTables\';\n\n                var listener_fields_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer("/admin/loadListenerFieldsAdmin?id='+rowId;\n                var listener_fields_update_url='")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateListenerFieldsAdmin\';\n                var listener_fields_addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: listener_fields_update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var listener_fields_editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: listener_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    alert(\'The "Edit" button was clicked with rowid=\' + rowid);\n                    }\n                };\n                var listener_fields_deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: listener_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var listener_fields_viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: listener_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n                var listener_fields_searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: listener_fields_update_url,modal: true, };\n                var listener_fields_grid = jQuery(listener_fields_grid_name);\n                listener_fields_grid.jqGrid({\n                url: listener_fields_load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: [\'id\', \'')
        __M_writer(escape(_('Field')))
        __M_writer("', '")
        __M_writer(escape(_('Value')))
        __M_writer("','")
        __M_writer(escape(_('Assigned')))
        __M_writer("','")
        __M_writer(escape(_('Multiplier')))
        __M_writer("','")
        __M_writer(escape(_('Unit')))
        __M_writer('\'],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'field\', index: \'field\', width: 25,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'value\', index: \'value\', width: 25,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'assign\', index: \'assign\', width: 15,align: \'right\',hidden: false, editable: true, edittype: \'text\', formatter:assignFmatter, editrules: {required: true}},\n                    {name: \'multiplier\', index: \'multiplier\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'unit\', index: \'value\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true}},\n                ],\n                pager: jQuery(listener_fields_grid_pager),\n                rowNum: 15,\n                rowList: [15, 50, 100],\n                sortname: \'field\',\n                sortorder: "asc",\n                viewrecords: true,\n                width: winWidth-40,\n                height: winHeight-160,\n\n                ondblClickRow: function(rowId) {\n                    var rowData = jQuery(this).getRowData(rowId);\n                    $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadAssignFormTemplate\',\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'field\':rowData[\'field\'],\'value\':rowData[\'value\'],\'assigned\':rowData[\'assign\'],\'multiplier\':rowData[\'multiplier\'],\'unit\':rowData[\'unit\'],\'row\':rowData[\'id\'] },\n                        success: function(parameterdata) {\n                            //Insert HTML code\n                            $( "#addAssignForm" ).html(parameterdata.assignformtemplate);\n                        },\n                        error: function() {\n                            alert("Error accessing server /admin/loadAssignFormTemplate")\n                        },\n                        complete: function() {\n                        }\n                    });\n\n\n                    var winHeight=Math.round(window.innerHeight*.50);\n                    var winWidth=Math.round(window.innerWidth*.56);\n                    var assignDialog = $( "#addAssignForm" ).dialog({\n                            autoOpen: false,\n                            height: winHeight,\n                            width: winWidth,\n                            modal: true,\n                            buttons: {\n                                "')
        __M_writer(escape(_('Update')))
        __M_writer('": function() {\n                                    var row = $(this).data(\'rowId\');\n                                    var assign = $(this).data(\'assign\');\n                                    var multiplier = $(\'#multiplier\').val();\n                                    var unit = $(\'#unit\').val();\n                                    var selopt=$( "#selectedassigned" ).val();\n                                    $.ajax({\n                                    type: "GET",\n                                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateListenerFields\'+"?record="+rowId+"&assigment="+selopt+"&multiplier="+multiplier+"&unit="+unit,\n                                    contentType: "application/json; charset=utf-8",\n                                    data: { \'param\':\'gaugeParameters\' },\n                                    success: function(parameterdata) {\n                                        listener_fields_grid.trigger( \'reloadGrid\');\n                                    },\n                                    error: function() {\n                                        alert("Error accessing server /admin/updateListenerFields")\n                                    },\n                                    complete: function() {\n                                    }\n                                    });\n                                    assignDialog.dialog( "close" );\n                                },\n                                Cancel: function() {\n                                    assignDialog.dialog( "close" );\n                                }\n                            },\n                            close: function() {\n                                //form[ 0 ].reset();\n                                //allFields.removeClass( "ui-state-error" );\n                            }\n                        });\n\n                    assignDialog.dialog( "open" );\n                    },\n                });\n                listener_fields_grid.jqGrid(\'navGrid\',listener_fields_grid_pager,{edit:false,add:false,del:false, search:true},\n                            listener_fields_editParams,\n                            listener_fields_addParams,\n                            listener_fields_deleteParams,\n                            listener_fields_searchParams,\n                            listener_fields_viewParams)\n                $("#listenerFieldsGrid01").show();\n                var editFieldsDialog = $( "#listenerFieldsGrid01" ).dialog({\n                    autoOpen: false,\n                    height: winHeight,\n                    width: winWidth,\n                    modal: true,\n                    close: function() {\n                        listener_fields_grid.jqGrid(\'GridUnload\');\n                    }\n                });\n                $("#listenerFieldsGrid01").trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                editFieldsDialog.data(\'rowId\',1);\n                editFieldsDialog.dialog( "open" );\n            }\n\n\n            function changeListenerState() {\n            var grid = jQuery(grid_name);\n            var rowKey = grid.getGridParam("selrow");\n            if (rowKey){\n                $.ajax({\n                    type: "GET",\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateListenerState\'+"?id="+rowKey+"&user=')
        __M_writer(escape(user))
        __M_writer('",\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'param\':\'gaugeParameters\' },\n                    success: function(data) {\n                        // data.value is the success return json. json string contains key value\n                        return true;\n                    },\n                    error: function() {\n                        alert("Error accesing /admin/updatelistenerstate")\n                        return true;\n                    },\n                    complete: function() {\n                    }\n                 });\n                }\n            else\n                alert("No rows are selected");\n            }\n\n            function changeLogListenerState() {\n            var grid = jQuery(grid_name);\n            var rowKey = grid.getGridParam("selrow");\n            if (rowKey){\n                $.ajax({\n                    type: "GET",\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateLogListenerState\'+"?id="+rowKey+"&user=')
        __M_writer(escape(user))
        __M_writer('",\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'param\':\'gaugeParameters\' },\n                    success: function(data) {\n                        // data.value is the success return json. json string contains key value\n                        return true;\n                    },\n                    error: function() {\n                        alert("Error accesing /admin/updatelistenerstate")\n                        return true;\n                    },\n                    complete: function() {\n                    }\n                 });\n                }\n            else\n                alert("No rows are selected");\n            }\n\n            function changeListenerUserState(id,topgrid) {\n\n                $.ajax({\n                    type: "GET",\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateListenerUserState\'+"?id="+id,\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'param\':\'gaugeParameters\' },\n                    success: function(data) {\n                        $(" #jqGridUser").trigger( \'reloadGrid\', { fromServer: true, page: 1 } );\n                        return true;\n                    },\n                    error: function() {\n                        alert("Error accesing /admin/updatelistenerstate")\n                        return true;\n                    },\n                    complete: function() {\n                    }\n                });\n            }\n\n            // STOMP\n            var adminlistenerclient = Stomp.client(\'')
        __M_writer(escape(h.stompServer()))
        __M_writer('\');\n            adminlistenerclient.debug=null;\n            var listener_connect_callback = function() {\n                adminlistenerclient.subscribe("/topic/adminlistener", listener_subscribe_callback);\n                // called back after the client is connected and authenticated to the STOMP server\n              };\n            var listener_error_callback = function(error) {\n            };\n            var listener_subscribe_callback = function(message) {\n\n                var msg = message.body;\n                var payload = msg.split(\'|\');\n                var command = payload[0];\n                var data = payload[1];\n                switch (command) {\n                        case \'RELOAD\':\n                            $("#jgGridListeners").trigger( \'reloadGrid\' );\n                            break;\n                        case \'NEW\':\n                            $("#jgGridListeners").trigger( \'reloadGrid\' );\n                            $.alert("Listener has been trigger, now you can assign data", { autoClose:true,type: \'success\',});\n                            bell.play();\n                            break;\n                        case \'MSG\':\n                            $.alert(data, { autoClose:false,type: \'success\',});\n                            bell.play();\n                            break;\n                }\n              };\n            // adminlistenerclient.connect(\'')
        __M_writer(escape(h.whoami()))
        __M_writer("', '")
        __M_writer(escape(h.password()))
        __M_writer("', listener_connect_callback, listener_error_callback, '/');\n            var stompUser='")
        __M_writer(escape(h.stompUser()))
        __M_writer("';\n            var stompPass='")
        __M_writer(escape(h.stompPassword()))
        __M_writer('\';\n            adminlistenerclient.connect(stompUser, stompPass, listener_connect_callback, listener_error_callback, \'/\');\n            </script>\n</div>\n    <!-- page start-->\n    <!-- Hidden POP UP Start-->\n    <div id="UserGrid" class="dialog-hidden" title="')
        __M_writer(escape(_('Listener Fields')))
        __M_writer('">\n        <table style="width:100%;overflow:auto;">\n        <table id="jqGridUser" class="scroll" cellpadding="0" cellspacing="0"></table>\n        <div id="UserTables" class="scroll" style="text-align:center;"></div>\n        <div id="UserPTables" class="scroll" style="text-align:center;"></div>\n        </table>\n        <br>\n    </div>\n    <div id="listenerFieldsGrid01" class="dialog-hidden" title="')
        __M_writer(escape(_('Listener Fields Mapper')))
        __M_writer('">\n        <table style="width:100%;overflow:auto;">\n        <table id="jqGridListenerFields" class="scroll" cellpadding="0" cellspacing="0"></table>\n        <div id="listFieldsTables" class="scroll" style="text-align:center;"></div>\n        <div id="listPlistenerFields" class="scroll" style="text-align:center;"></div>\n        </table>\n        <br>\n    </div>\n    <div id="addAssignForm" class="dialog-hidden" title="Field Assigment">\n    </div>\n    <!-- Hidden POP UP End-->\n    <div id="noteContent" title="')
        __M_writer(escape(_('Basic dialog')))
        __M_writer('">\n    </div>\n    <!-- JQGRID table start-->\n    <table style="width:100%">\n    <table id="jgGridListeners" class="scroll" cellpadding="0" cellspacing="0"></table>\n    <div id="listPagerListeners" class="scroll" style="text-align:center;"></div>\n    <div id="listPsetcolsListener" class="scroll" style="text-align:center;"></div>\n    </table>\n    <br>\n\n  <!-- page end-->')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"uri": "/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/adminlistener.mak", "line_map": {"17": 0, "26": 1, "27": 4, "28": 4, "29": 36, "30": 36, "31": 36, "32": 36, "33": 37, "34": 37, "35": 37, "36": 37, "37": 38, "38": 38, "39": 55, "40": 55, "41": 55, "42": 55, "43": 55, "44": 55, "45": 55, "46": 55, "47": 55, "48": 55, "49": 55, "50": 55, "51": 87, "52": 87, "53": 88, "54": 88, "55": 96, "56": 96, "57": 97, "58": 97, "59": 106, "60": 106, "61": 107, "62": 107, "63": 126, "64": 126, "65": 127, "66": 127, "67": 173, "68": 173, "69": 174, "70": 174, "71": 229, "72": 229, "73": 230, "74": 230, "75": 246, "76": 246, "77": 246, "78": 246, "79": 246, "80": 246, "81": 277, "82": 277, "83": 278, "84": 278, "85": 287, "86": 287, "87": 288, "88": 288, "89": 307, "90": 307, "91": 345, "92": 345, "93": 376, "94": 376, "95": 410, "96": 410, "97": 421, "98": 421, "99": 432, "100": 432, "101": 435, "102": 435, "103": 451, "104": 451, "105": 479, "106": 479, "107": 479, "108": 479, "109": 485, "110": 485, "111": 486, "112": 486, "113": 495, "114": 495, "115": 504, "116": 504, "117": 510, "118": 510, "119": 529, "120": 529, "121": 573, "122": 573, "123": 573, "124": 573, "125": 573, "126": 573, "127": 600, "128": 600, "129": 600, "130": 600, "131": 604, "132": 604, "133": 605, "134": 605, "135": 612, "136": 612, "137": 622, "138": 622, "139": 645, "140": 645, "141": 663, "142": 663, "143": 677, "144": 677, "145": 719, "146": 719, "147": 733, "148": 733, "149": 745, "150": 745, "151": 745, "152": 745, "153": 745, "154": 745, "155": 745, "156": 745, "157": 745, "158": 745, "159": 775, "160": 775, "161": 780, "162": 780, "163": 781, "164": 781, "165": 794, "166": 794, "167": 803, "168": 803, "169": 812, "170": 812, "171": 831, "172": 831, "173": 843, "174": 843, "175": 895, "176": 895, "177": 896, "178": 896, "179": 912, "180": 912, "181": 912, "182": 912, "183": 912, "184": 912, "185": 912, "186": 912, "187": 912, "188": 912, "189": 934, "190": 934, "191": 957, "192": 957, "193": 965, "194": 965, "195": 1020, "196": 1020, "197": 1020, "198": 1020, "199": 1045, "200": 1045, "201": 1045, "202": 1045, "203": 1068, "204": 1068, "205": 1085, "206": 1085, "207": 1114, "208": 1114, "209": 1114, "210": 1114, "211": 1115, "212": 1115, "213": 1116, "214": 1116, "215": 1122, "216": 1122, "217": 1130, "218": 1130, "219": 1141, "220": 1141, "226": 220}, "source_encoding": "utf-8", "filename": "/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/adminlistener.mak"}
__M_END_METADATA
"""
