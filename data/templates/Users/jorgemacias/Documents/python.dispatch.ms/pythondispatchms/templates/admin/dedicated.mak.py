# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1555371618.102688
_enable_loop = True
_template_filename = '/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/dedicated.mak'
_template_uri = '/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/dedicated.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        tg = context.get('tg', UNDEFINED)
        h = context.get('h', UNDEFINED)
        user = context.get('user', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('\n\n<script type="text/javascript">\n    var lastsel2\n$(document).ready(function () {\n    function showCalendarInDedicated(rowId)\n    {\n        var winHeight = 400; //Math.round(window.innerHeight * .50)\n                var winWidth = 810;//Math.round(window.innerWidth * .50)\n                var grid_name_email = \'rowed5\';\n                var pager_name = "rowedPager";\n                var user_fields_grid_pager=pager_name;\n                var grid_name_email_by_id = \'#\'+grid_name_email;\n                var pager_name_by_id = \'#\'+pager_name;\n                if ($(grid_name_email_by_id).length){\n                    $(grid_name_email_by_id).remove();\n                    $(pager_name_by_id).remove();\n                }\n                if ($("#CalForm").length){\n                    $("#CalForm").remove();\n                }\n                var user_fields_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadMonitorCalendars?id=\'+rowId;\n                var newDiv = $(document.createElement(\'div\'));\n                var html=\'<div id="CalForm" title="Filter">\'\n                html=html+\'<table id="\'+grid_name_email+\'"></table> <div id="\'+pager_name+\'"> </div>\'\n                html=html+\'</div>\'\n                newDiv.html(html);\n\n                var createUsersSticky = newDiv.dialog({\n                    autoOpen: false,\n                    title: "Doble\xa0click para seleccionar rol",\n                    height: winHeight - 20,\n                    width: winWidth,\n                    modal: true,\n                    close: function () {\n                    }\n                });\n                var grid = new jQuery(grid_name_email_by_id);\n                grid.jqGrid({\n                    url: user_fields_load_url,\n                    datatype: \'json\',\n                    mtype: \'GET\',\n                    colNames: [\'id\', \'\'  ,\'00\',\'01\',\'02\',\'03\',\'04\',\'05\',\'06\',\'07\',\'08\',\'09\',\'10\',\'11\',\'12\',\'13\',\'14\',\'15\',\'16\',\'17\',\'18\',\'19\', \'20\',\'21\',\'22\',\'23\'],\n                    colModel: [\n                        {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: false,edittype: \'text\',editrules: {required: false}},\n                        {name: \'day\',index: \'day\', width: 15, align: \'right\', hidden: false, editable: false, edittype: \'text\',editrules: {required: false}},\n                        {name: \'h00\', index: \'h00\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions:  {value:"Si:No"}},\n                        {name: \'h01\', index: \'h01\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h02\', index: \'h02\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h03\', index: \'h03\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h04\', index: \'h04\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h05\', index: \'h05\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h06\', index: \'h06\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h07\', index: \'h07\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h08\', index: \'h08\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h09\', index: \'h09\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h10\', index: \'h10\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h11\', index: \'h11\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h12\', index: \'h12\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h13\', index: \'h13\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h14\', index: \'h14\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h15\', index: \'h15\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h16\', index: \'h16\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h17\', index: \'h17\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h18\', index: \'h18\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h19\', index: \'h19\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h20\', index: \'h20\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h21\', index: \'h21\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h22\', index: \'h22\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n                        {name: \'h23\', index: \'h23\', width: 5,align: \'right\',hidden: false, editable: true,edittype:"checkbox",editoptions: {value:"Si:No"}},\n\n\n                    ],\n\n                    pager: jQuery(user_fields_grid_pager),\n                    rowNum: 10,\n                    rowList: [10, 50, 100],\n                    sortname: \'day\',\n                    sortorder: "asc",\n                    viewrecords: true,\n                    width: winWidth-40,\n                    height: winHeight-145,\n                    ondblClickRow: function(this_row) {\n                                var rowData = jQuery("#jqGridDevices").getRowData(this_row);\n                                //mapExpressions(rowId,rowData[\'id\'],rowData[\'user_name\'],listenerID,rowData[\'userlisteners_id\']);\n                                },\n                    onSelectRow: function(id){\n                        if(id && id!==lastsel2){\n                            jQuery(\'#rowed5\').jqGrid(\'restoreRow\',lastsel2);\n                            jQuery(\'#rowed5\').jqGrid(\'editRow\',id,true);\n                            lastsel2=id;\n                        }\n                    },\n                    editurl: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateMonitorCalendars\',\n                    caption: "Input Types"\n\n                });\n                createUsersSticky.dialog("open");\n\n    }\n    function showDevicesInDedicated(rowId)\n    {\n        //var winHeight=Math.round(window.innerHeight*.50);\n        //var winWidth=Math.round(window.innerWidth*.85);\n        var winHeight=450;\n        var winWidth=1000;\n        // Event Routines\n        var user_fields_grid_name = \'#jqGridDevices\';\n        var grid_name_devices = \'jqGridDevices\';\n        var user_fields_grid_pager= \'#DevicesTables\';\n        var pager_name = "DevicesTables";\n        var user_fields_load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer("/admin/loadMonitorDevices?id='+rowId;\n        var user_fields_update_url='")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateMonitorDevices\';\n        var user_fields_addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: user_fields_update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n        var user_fields_editParams = {left: 0,width: window.innerWidth-500,top: 20,height: 250,url: user_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n            width: "500",\n            editfunc: function (rowid) {\n            alert(\'The "Edit" button was clicked with rowid=\' + rowid);\n            }\n        };\n        var user_fields_deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: user_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n        var user_fields_viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: user_fields_update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n        var user_fields_searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: user_fields_update_url,modal: true, };\n        if ($("#DevForm").length){\n                $("#DevForm").remove();\n            }\n            var newDiv = $(document.createElement(\'div\'));\n            var html=\'<div id="DevForm" title="Filter">\'\n            html=html+\'<table id="\'+grid_name_devices+\'"></table> <div id="\'+pager_name+\'"> </div>\'\n            html=html+\'</div>\'\n            newDiv.html(html);\n\n            var createUsersSticky2 = newDiv.dialog({\n                autoOpen: false,\n                title: "')
        __M_writer(escape(_('Unidades a monitorear')))
        __M_writer('",\n                height: winHeight - 20,\n                width: winWidth,\n                modal: true,\n                close: function () {\n                }\n            });\n\n        var user_fields_grid = new jQuery(user_fields_grid_name);\n        user_fields_grid.jqGrid({\n            url: user_fields_load_url,\n            datatype: \'json\',\n            mtype: \'GET\',\n            colNames: [\'id\', "')
        __M_writer(escape(_('IMEI')))
        __M_writer('","')
        __M_writer(escape(_('Unidad')))
        __M_writer('","')
        __M_writer(escape(_('Conductor')))
        __M_writer('",\'Password\',\'Tel 1\',\'Tel 2\',\'Tel 3\',\'Obs\'],\n            colModel: [\n                {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: false,edittype: \'text\',editrules: {required: false}},\n                {name: \'imei\',index: \'imei\', width: 15, align: \'right\', hidden: false, editable: false, edittype: \'text\',editrules: {required: false}},\n                {name: \'description\', index: \'description\', width: 35,align: \'right\',hidden: false, editable: false,edittype: \'text\', editrules: {required: false}},\n                {name: \'driver_name\', index: \'driver_name\', width: 5,align: \'right\',hidden: false, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'password\', index: \'password\', width: 5,align: \'right\',hidden: false, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'phone1\', index: \'phone1\', width: 5,align: \'right\',hidden: false, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'phone2\', index: \'phone2\', width: 5,align: \'right\',hidden: false, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'phone3\', index: \'phone3\', width: 5,align: \'right\',hidden: false, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'obs\', index: \'obs\', width: 5,align: \'right\',hidden: false, editable: true,edittype: \'text\', editrules: {required: false}},\n                \n            ],\n            pager: jQuery(user_fields_grid_pager),\n            rowNum: 10,\n            rowList: [10, 50, 100],\n            sortname: \'description\',\n            sortorder: "asc",\n            viewrecords: true,\n            width: winWidth-40,\n            height: winHeight-145,\n\n            ondblClickRow: function(this_row) {\n                var rowData = jQuery("#jqGridDevices").getRowData(this_row);\n                //mapExpressions(rowId,rowData[\'id\'],rowData[\'user_name\'],listenerID,rowData[\'userlisteners_id\']);\n                },\n            });\n            user_fields_grid.jqGrid(\'navGrid\',user_fields_grid_pager,{edit:true,add:false,del:false, search:true},\n                        user_fields_editParams,\n                        user_fields_addParams,\n                        user_fields_deleteParams,\n                        user_fields_searchParams,\n                        user_fields_viewParams)\n\n\n        createUsersSticky2.dialog("open");\n\n    }\n\n\n    var bell = new Audio("')
        __M_writer(escape(tg.url('/sounds/ding.mp3')))
        __M_writer('");\n            function dateFmatter ( cellvalue, options, rowObject )\n            {\n                var utcDate=moment.utc(cellvalue,"YYYY-MM-DD h:mm:ss")\n                var localDate=moment(utcDate).local();\n                var formatdate = localDate.format("YYYY-MM-DD HH:mm:ss");\n                return formatdate;\n            }\n            function stateFmatter ( cellvalue, options, rowObject ){\n                html=cellvalue;\n                if ( cellvalue=="0"){html = \'<center><span class="glyphicon glyphicon-remove" style="color:red"></span></center>\';}\n                if ( cellvalue=="1"){html = \'<center><span class="glyphicon glyphicon-ok" style="color:green"></span></center>\';}\n                return html;\n            }\n            function priorityFmatter ( cellvalue, options, rowObject )\n            {\n                html=cellvalue;\n\n                switch (cellvalue){\n\n                    case cellvalue=1:\n                        html=\'<center><div class="redsquare" style="text-align:center"> <img/> </div></center>\';\n                        break;\n                    case cellvalue=2:\n                        html=\'<center><div class="orangesquare"> <img/> </div></center>\';\n                        break;\n                    case cellvalue=3:\n                        html=\'<center><div class="yellowsquare"> <img/> </div></center>\';\n                        break;\n                    case cellvalue=4:\n                        html=\'<center><div class="greensquare"> <img/> </div></center>\'\n                        break;\n                    case cellvalue=5:\n                        html=\'<center><div class="bluesquare"> <img/> </div></center>\';\n                        break;\n                }\n                return html;\n            }\n            var c5Plates=\'\'\n            var grid_name_dedicated = \'#jgGridDedicated\';\n            var grid_pager_dedicated= \'#listDedicatedEvents\';\n            var load_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadDedicatedMonitor/?user=')
        __M_writer(escape(user))
        __M_writer("';\n            var update_url='")
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateDedicatedMonitor/?user=')
        __M_writer(escape(user))
        __M_writer("';\n            //var header_container='")
        __M_writer(escape(_('Alerts')))
        __M_writer('\';\n            var addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 255,url: update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 255,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    }\n                };\n            var deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,mtype: \'GET\',closeAfterEdit: true,closeAfterSearch:true,url: update_url,modal: true, };\n            var grid = jQuery(grid_name_dedicated);\n\n            $(document).ready(function () {\n                grid.jqGrid({\n                url: load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: [\'')
        __M_writer(escape(_('Hidden')))
        __M_writer("', '")
        __M_writer(escape(_('Name')))
        __M_writer("', '")
        __M_writer(escape(_('inicio')))
        __M_writer("', '")
        __M_writer(escape(_('Fin')))
        __M_writer("', '")
        __M_writer(escape(_('Interval')))
        __M_writer("', '")
        __M_writer(escape(_('Application ID')))
        __M_writer("', '")
        __M_writer(escape(_('App Nombre')))
        __M_writer("','")
        __M_writer(escape(_('Rol')))
        __M_writer("','")
        __M_writer(escape(_('Estado')))
        __M_writer('\'],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: false}},\n                    {name: \'name\',index: \'name\', width: 5, align: \'right\',hidden: false,editable: true, edittype: \'text\',editrules: {required: false}},\n                    {name: \'start\',index: \'start\',width: 10,align: \'right\',editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'end\', index: \'end\', width: 5,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true},search:false},\n                    {name: \'interval\', index: \'interval\', width: 5,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true},search:false},\n                    {name: \'application_id\', index: \'application_id\', width: 15,align: \'right\',hidden: true, editable: true, edittype: \'text\', formatter:priorityFmatter, editrules: {required: true},search:false},\n                    {name: \'application_name\', index: \'application_name\', width: 5,align: \'right\',hidden: false, editable: true, edittype: \'text\', editrules: {required: true},search:false},\n                    {name: \'role\', index: \'rolestate\', width: 2,align: \'right\',hidden: false, editable: false, edittype: \'text\', formatter:stateFmatter, editrules: {required: true},search:false},\n                    {name: \'state\', index: \'state\', width: 2,align: \'right\',hidden: false, editable: false, edittype: \'text\', formatter:stateFmatter, editrules: {required: true},search:false},\n                ],\n                pager: jQuery(grid_pager_dedicated),\n                rowNum: 10,\n                rowList: [10, 50, 100],\n                sortname: \'start\',\n                sortorder: "desc",\n                viewrecords: true,\n                autowidth: true,\n                height: 250,\n                ondblClickRow: function(rowId) {\n                    var rowData = jQuery("#jgGridDedicated").getRowData(rowId);\n                    showDevicesInDedicated(rowData[\'id\'])\n                },\n                //capt\n                //caption: header_container,\n            });\n            grid.jqGrid(\'navGrid\',grid_pager_dedicated,{edit:false,add:false,del:true, search:false},\n                            editParams,\n                            addParams,\n                            deleteParams,\n                            searchParams,\n                            viewParams);\n            // add custom button\n\n            grid.navButtonAdd(grid_pager_dedicated,\n                {\n                    buttonicon: "ui-icon-arrow-2-n-s",\n                    title: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('State')))
        __M_writer('",\n                    position: "first",\n                    onClickButton: changeMonitorState\n                });\n            grid.navButtonAdd(grid_pager_dedicated,\n                {\n                    buttonicon: "ui-icon-plus",\n                    title: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                    position: "first",\n                    onClickButton: addUserWindow\n                });\n\n            grid.navButtonAdd(grid_pager_dedicated,\n                {\n                    buttonicon: "ui-icon-gear",\n                    title: "')
        __M_writer(escape(_('Unidades')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Unidades')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:  function(rowId) {\n                         var rowKey = grid.getGridParam("selrow");\n                         if (rowKey){\n                             var rowData = grid.getRowData(rowKey);\n                             //addUser(rowData[\'id\']);\n                             showDevicesInDedicated(rowData[\'id\'])\n                         }\n                        else{\n                            $.alert("No se ha seleccionado un renglón", { autoClose:false,type: \'danger\',});\n                            }\n\n                        },\n                }\n            );\n\n            grid.navButtonAdd(grid_pager_dedicated,\n                {\n                    buttonicon: "ui-icon-clock",\n                    title: "')
        __M_writer(escape(_('Calendario')))
        __M_writer('",\n                    caption: "')
        __M_writer(escape(_('Calendario')))
        __M_writer('",\n                    position: "last",\n                    onClickButton:  function(rowId) {\n                         var rowKey = grid.getGridParam("selrow");\n                         if (rowKey){\n                             var rowData = grid.getRowData(rowKey);\n                             //addUser(rowData[\'id\']);\n                             showCalendarInDedicated(rowData[\'id\'])\n                         }\n                        else{\n                            $.alert("No se ha seleccionado un renglón", { autoClose:false,type: \'danger\',});\n                            }\n\n                        },\n                }\n            );\n\n\n            });\n\n            $.extend($.jgrid.nav,{alerttop:1});\n            function changeMonitorState() {\n                var grid = jQuery(\'#jgGridDedicated\');\n                var rowKey = grid.getGridParam("selrow");\n                if (rowKey){\n                    $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/updateMonitorState\'+"?id="+rowKey+"&user=')
        __M_writer(escape(user))
        __M_writer('",\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                            // data.value is the success return json. json string contains key value\n                            return true;\n                        },\n                        error: function() {\n                            $.alert("Error accesing /admin/updateMonitorstate", { autoClose:false,type: \'danger\',});\n                            return true;\n                        },\n                        complete: function() {\n                        }\n                     });\n                    }\n                else\n                    $.alert("No se ha seleccionado un renglón", { autoClose:false,type: \'danger\',});\n\n            }\n\n            function addUserWindow(){\n                $.ajax({\n                          type: "GET",\n                          url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/admin/loadWizard\',\n                          contentType: "application/json; charset=utf-8",\n                          data: { \'name\':\'pythondispatchms.templates.admin.wizard_dedicated\' ,\'user\':\'')
        __M_writer(escape(user))
        __M_writer('\'},\n                          success: function(parameterdata) {\n                              //Insert HTML code\n                              //$( "#addAssignForm" ).html(parameterdata.expressionformtemplate);\n\n                              var winHeight = 750; //Math.round(window.innerHeight * .50)\n                              var winWidth = 1200;//Math.round(window.innerWidth * .50)\n\n                              if ($("#addWizardForm").length){\n                                  $("#addWizardForm").remove();\n                              }\n                              var newDiv = $(document.createElement(\'div\'));\n\n                              newDiv.html(parameterdata.dedwizardtemplate);\n                              var DedicatedWizardDialog = newDiv.dialog({\n                                  autoOpen: false,\n                                  title: "')
        __M_writer(escape(_('Creación de monitoreo dedicado')))
        __M_writer('",\n                                  height: winHeight,\n                                  width: winWidth,\n                                  modal: true,\n                                  close: function() {\n                                      //$(\'#globalExpForm\')[0].reset();\n                                      //form[ 0 ].reset();\n                                      //allFields.removeClass( "ui-state-error" );\n                                  }\n                               });\n                              DedicatedWizardDialog.data(\'rowId\',1);\n                              DedicatedWizardDialog.dialog( "open" );\n                          },\n                          error: function() {\n                              $.alert("Error accessing server /admin/loadTriggerFormTemplate", { autoClose:false,type: \'danger\',});\n                          },\n                          complete: function() {\n                          }\n                     });\n            }\n\n// STOMP\n            var dedicatedlistenerclient = Stomp.client(\'')
        __M_writer(escape(h.stompServer()))
        __M_writer('\');\n            dedicatedlistenerclient.debug=null;\n            var email_listener_connect_callback = function() {\n                dedicatedlistenerclient.subscribe("/topic/dedicatedlistener", email_listener_subscribe_callback);\n                // called back after the client is connected and authenticated to the STOMP server\n              };\n            var email_listener_error_callback = function(error) {\n            };\n            var email_listener_subscribe_callback = function(message) {\n\n                var msg = message.body;\n                var payload = msg.split(\'|\');\n                var command = payload[0];\n                var data = payload[1];\n                switch (command) {\n                        case \'RELOAD\':\n                            $("#jgGridDedicated").trigger( \'reloadGrid\' );\n                            break;\n                        case \'NEW\':\n                            $("#jgGridDedicated").trigger( \'reloadGrid\' );\n                            $.alert("Nuevo monitoreo ", { autoClose:true,type: \'success\',});\n                            bell.play();\n                            break;\n                        case \'MSG\':\n                            $.alert(data, { autoClose:false,type: \'success\',});\n                            bell.play();\n                            break;\n                }\n              };\n            //dedicatedlistenerclient.connect(\'')
        __M_writer(escape(h.whoami()))
        __M_writer("', '")
        __M_writer(escape(h.password()))
        __M_writer("', listener_connect_callback, listener_error_callback, '/');\n            var stompUser='")
        __M_writer(escape(h.stompUser()))
        __M_writer("';\n            var stompPass='")
        __M_writer(escape(h.stompPassword()))
        __M_writer('\';\n            dedicatedlistenerclient.connect(stompUser, stompPass, email_listener_connect_callback, email_listener_error_callback, \'/\');            \n\n});\n</script>\n\n\n    <table style="width:100%">\n    <table id="jgGridDedicated" class="scroll" cellpadding="0" cellspacing="0"></table>\n    <div id="listDedicatedEvents" class="scroll" style="text-align:center;"></div>\n    <div id="listPsetcolsDedicated" class="scroll" style="text-align:center;"></div>\n    </table>\n    <br>\n\n\n</form>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"uri": "/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/dedicated.mak", "line_map": {"17": 0, "26": 1, "27": 22, "28": 22, "29": 94, "30": 94, "31": 112, "32": 112, "33": 113, "34": 113, "35": 135, "36": 135, "37": 148, "38": 148, "39": 148, "40": 148, "41": 148, "42": 148, "43": 188, "44": 188, "45": 229, "46": 229, "47": 229, "48": 229, "49": 230, "50": 230, "51": 230, "52": 230, "53": 231, "54": 231, "55": 248, "56": 248, "57": 248, "58": 248, "59": 248, "60": 248, "61": 248, "62": 248, "63": 248, "64": 248, "65": 248, "66": 248, "67": 248, "68": 248, "69": 248, "70": 248, "71": 248, "72": 248, "73": 286, "74": 286, "75": 287, "76": 287, "77": 294, "78": 294, "79": 295, "80": 295, "81": 303, "82": 303, "83": 304, "84": 304, "85": 324, "86": 324, "87": 325, "88": 325, "89": 352, "90": 352, "91": 352, "92": 352, "93": 375, "94": 375, "95": 377, "96": 377, "97": 393, "98": 393, "99": 415, "100": 415, "101": 444, "102": 444, "103": 444, "104": 444, "105": 445, "106": 445, "107": 446, "108": 446, "114": 108}, "source_encoding": "utf-8", "filename": "/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/admin/dedicated.mak"}
__M_END_METADATA
"""
