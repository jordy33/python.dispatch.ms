# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1555371614.726376
_enable_loop = True
_template_filename = '/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak'
_template_uri = '/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        tg = context.get('tg', UNDEFINED)
        _ = context.get('_', UNDEFINED)
        h = context.get('h', UNDEFINED)
        tz = context.get('tz', UNDEFINED)
        closed_statistic = context.get('closed_statistic', UNDEFINED)
        score_statistic = context.get('score_statistic', UNDEFINED)
        user = context.get('user', UNDEFINED)
        group = context.get('group', UNDEFINED)
        toattend_statistic = context.get('toattend_statistic', UNDEFINED)
        attended_statistic = context.get('attended_statistic', UNDEFINED)
        list = context.get('list', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('<style type="text/css">\n\n    .ui-timepicker-div .ui-widget-header { margin-bottom: 8px; }\n    .ui-timepicker-div dl { text-align: left; }\n    .ui-timepicker-div dl dt { float: left; clear:left; padding: 0 0 0 5px; }\n    .ui-timepicker-div dl dd { margin: 0 10px 10px 40%; }\n    .ui-timepicker-div td { font-size: 90%; }\n    .ui-tpicker-grid-label { background: none; border: none; margin: 0; padding: 0; }\n    .ui-timepicker-div .ui_tpicker_unit_hide{ display: none; }\n\n    .ui-timepicker-div .ui_tpicker_time .ui_tpicker_time_input { background: none; color: inherit; border: none; outline: none; border-bottom: solid 1px #555; width: 95%; }\n    .ui-timepicker-div .ui_tpicker_time .ui_tpicker_time_input:focus { border-bottom-color: #aaa; }\n\n    .ui-timepicker-rtl{ direction: rtl; }\n    .ui-timepicker-rtl dl { text-align: right; padding: 0 5px 0 0; }\n    .ui-timepicker-rtl dl dt{ float: right; clear: right; }\n    .ui-timepicker-rtl dl dd { margin: 0 40% 10px 10px; }\n\n    /* Shortened version style */\n    .ui-timepicker-div.ui-timepicker-oneLine { padding-right: 2px; }\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_time,\n    .ui-timepicker-div.ui-timepicker-oneLine dt { display: none; }\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_time_label { display: block; padding-top: 2px; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl { text-align: right; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd,\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd > div { display:inline-block; margin:0; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_minute:before,\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_second:before { content:\':\'; display:inline-block; }\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_millisec:before,\n    .ui-timepicker-div.ui-timepicker-oneLine dl dd.ui_tpicker_microsec:before { content:\'.\'; display:inline-block; }\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_unit_hide,\n    .ui-timepicker-div.ui-timepicker-oneLine .ui_tpicker_unit_hide:before{ display: none; }\n    link { color: #0000EE; }\n\n    .text{\n        position:relative;\n        left:190px;\n        top:0px;\n        width:290px;\n        font-size:14px;\n        color:black;\n\n    }\n    .imgContainer{\n        float:left;\n    }\n\n    .azimuthimage {\n        position: relative;\n    }\n\n    .azimuthimage .base {\n       position: absolute;\n       top: 0;\n       left: 0;\n\n       z-index : 0;\n        width: 300px;\n       height: 221px;\n    }\n\n    .azimuthimage .overlay{\n       position: absolute;\n       top: 55px;\n       left:    81px;\n       width: 105px;\n       height: 105px;\n    }\n\n    div.dialog-hidden { display:none}\n    div.redsquare    { border: solid 10px red; width: 67px; height: 10px; }\n    div.orangesquare { border: solid 10px orange; width: 67px; height: 10px;}\n    div.yellowsquare { border: solid 10px yellow; width: 67px; height: 10px;}\n    div.greensquare  { border: solid 10px green; width: 67px; height: 10px; }\n    div.bluesquare   { border: solid 10px blue; width: 67px; height: 10px; }\n</style>\n<script>\nfunction trafficSegment(){\nvar ding = new Audio("')
        __M_writer(escape(tg.url('/sounds/ding.mp3')))
        __M_writer('");\nvar bell = new Audio("')
        __M_writer(escape(tg.url('/sounds/bell.mp3')))
        __M_writer('");\nvar buzzer = new Audio("')
        __M_writer(escape(tg.url('/sounds/buzzer.mp3')))
        __M_writer('");\nvar claxon = new Audio("')
        __M_writer(escape(tg.url('/sounds/claxon.mp3')))
        __M_writer('");\nvar alarm = new Audio("')
        __M_writer(escape(tg.url('/sounds/alarm.mp3')))
        __M_writer('");\nvar icc=\'\';\nvar attendedGage= new JustGage({\n    id: "attendedGauge",\n    value: ')
        __M_writer(escape(attended_statistic))
        __M_writer(',\n    min: 0,\n    max: 100,\n    title: "')
        __M_writer(escape(_('Attended')))
        __M_writer('"\n});\nvar toAttendGage = new JustGage({\n    id: "toAttendGauge",\n    value: ')
        __M_writer(escape(toattend_statistic))
        __M_writer(',\n    min: 0,\n    max: 100,\n    title: "')
        __M_writer(escape(_('To Attend')))
        __M_writer('"\n});\nvar closedGage = new JustGage({\n    id: "closedGauge",\n    value: ')
        __M_writer(escape(closed_statistic))
        __M_writer(',\n    min: 0,\n    max: 100,\n    title: "')
        __M_writer(escape(_('Closed')))
        __M_writer('"\n});\nvar scoreGage = new JustGage({\n    id: "scoreGauge",\n    value: ')
        __M_writer(escape(score_statistic))
        __M_writer(',\n    min: 0,\n    max: 100,\n    levelColors : [ \t"#FF0000","#c18c05", "#98C105" ],\n    title: "')
        __M_writer(escape(_('Score')))
        __M_writer('"\n});\nfunction dateFmatter ( cellvalue, options, rowObject )\n{\n    var utcDate=moment.utc(cellvalue,"YYYY-MM-DD h:mm:ss")\n    var localDate=moment(utcDate).local();\n    var formatdate = localDate.format("YYYY-MM-DD HH:mm:ss");\n    return formatdate;\n}\nfunction priorityFmatter ( cellvalue, options, rowObject )\n    {\n        html=cellvalue;\n        if ( cellvalue==1){html = \'<center><div style="background-color:red"><div style="color:white">1</div></div></center>\';}\n        if ( cellvalue==2){html = \'<center><div style="background-color:orange" style="text-align:center">2</div></center>\';}\n        if ( cellvalue==3){html = \'<center><div style="background-color:yellow" style="text-align:center">3</div></center>\';}\n        if ( cellvalue==4){html = \'<center><div style="background-color:green"><div style="color:white">4</div></div></center>\';}\n        if ( cellvalue==5){html = \'<center><div style="background-color:blue"><div style="color:white">5</div></div></center>\';}\n        return html;\n    }\nfunction statusFmatter ( cellvalue, options, rowObject ){\n    html=cellvalue;\n    if ( cellvalue=="A"){html = \'<center><span class="glyphicon glyphicon-search" style="color:blue"></span></center>\';}\n    if ( cellvalue=="N"){html = \'<center><span class="glyphicon glyphicon-remove" style="color:red"></span></center>\';}\n    if ( cellvalue=="C"){html = \'<center><span class="glyphicon glyphicon-ok" style="color:green"></span></center>\';}\n    if ( cellvalue=="P"){html = \'<center><span class="glyphicon glyphicon-time" style="color:sandybrown"></span></center>\';}\n    return html;\n}\n\nvar c5Plates=\'\'\nvar image_counter=0;\nvar grid_name = \'#jqGridAlerts\';\nvar grid_pager= \'#listPagerAlerts\';\nvar update_url=\'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/updateTraffic?group=')
        __M_writer(escape(group))
        __M_writer("';\nvar load_url  ='")
        __M_writer(escape(h.url()))
        __M_writer('/traffic/loadTraffic?group=')
        __M_writer(escape(group))
        __M_writer('\';\n\nvar addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: update_url,mtype: \'GET\', closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\nvar editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n        width: "500",\n        editfunc: function (rowid) {\n        }\n    };\nvar deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\nvar viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: update_url,mtype: \'GET\',closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\nvar searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: update_url,modal: true, };\nvar grid = jQuery(grid_name);\n\n        $(document).ready(function () {\n\n            var username = \'dispatch\';\n            var password = \'managepass\';\n\n            function make_base_auth(user, password) {\n                var tok = user + \':\' + password;\n                var hash = btoa(tok);\n                return "Basic " + hash;\n            }\n            $.ajaxSetup({\n                beforeSend: function (xhr)\n                {\n                xhr.setRequestHeader("Content-Type","application/json");\n                xhr.setRequestHeader("Accept","application/json");\n                xhr.setRequestHeader( "Authorization", make_base_auth(username,password));\n                }\n            });\n            grid.jqGrid({\n            url: load_url,\n            datatype: \'json\',\n            mtype: \'GET\',\n            colNames: [\'')
        __M_writer(escape(_('Hidden')))
        __M_writer("', '")
        __M_writer(escape(_('Status')))
        __M_writer("', '")
        __M_writer(escape(_('Priority')))
        __M_writer("', '")
        __M_writer(escape(_('Client')))
        __M_writer("', '")
        __M_writer(escape(_('Event')))
        __M_writer("', '")
        __M_writer(escape(_('Event Description')))
        __M_writer("','")
        __M_writer(escape(_('Vehicle')))
        __M_writer("','")
        __M_writer(escape(_('Date')))
        __M_writer('\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Hidden\',\'Listener\',\'User\'],\n            colModel: [\n                {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                {name: \'attended_state\', index: \'attended_state\', width: 5,align: \'right\',hidden: false, editable: true, edittype: \'text\', formatter:statusFmatter, editrules: {required: true},search:false},\n                {name: \'priority\', index: \'priority\', width: 7,align: \'right\',hidden: false, editable: true, edittype: \'text\', formatter:priorityFmatter, editrules: {required: true},search:false},\n                {name: \'user_name\',index: \'user_name\',width: 25,align: \'right\',hidden: false,editable: true,edittype: \'text\',editrules: {required: false}},\n                {name: \'event_id\',index: \'event_id\',width: 5,align: \'right\',hidden: false,editable: true,edittype: \'text\',editrules: {required: false}},\n                {name: \'event_desc\',index: \'event_desc\', width: 25, align: \'right\',hidden: false,editable: true, edittype: \'text\',editrules: {required: false}},\n                {name: \'vehicle\',index: \'vehicle\',width: 25,align: \'right\',editable: true,edittype: \'text\',editrules: {required: true}},\n                {name: \'time_stamp\',index: \'time_stamp\', width: 14, align: \'right\',hidden: false,editable: true, edittype: \'text\', formatter:dateFmatter,editrules: {required: false}},\n                {name: \'attended_time\',index: \'attended_time\', width: 30, align: \'right\',hidden: true,editable: true, edittype: \'text\',editrules: {required: false}},\n                {name: \'pending_time\',index: \'pending_time\', width: 30, align: \'right\',hidden: true,editable: true, edittype: \'text\',editrules: {required: false}},\n                {name: \'closed_time\',index: \'closed_time\', width: 30, align: \'right\',hidden: true,editable: true, edittype: \'text\',editrules: {required: false}},\n                {name: \'user_id\',index: \'user_id\', width: 5, align: \'right\', hidden: true, editable: true, edittype: \'text\',editrules: {required: false}},\n                {name: \'imei\',index: \'imei\', width: 5, align: \'right\', hidden: true, editable: true, edittype: \'text\',editrules: {required: false}},\n                {name: \'latitude\',index: \'latitude\',width: 5, align: \'right\',hidden: true, editable: true, edittype: \'text\', editrules: {required: false}},\n                {name: \'longitude\',index: \'longitude\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'speed\',index: \'speed\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'azimuth\',index: \'azimuth\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'listener\',index: \'listener\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n                {name: \'user\',index: \'user\',width: 5,align: \'right\', hidden: true, editable: true,edittype: \'text\', editrules: {required: false}},\n            ],\n            pager: jQuery(grid_pager),\n            rowNum: 10,\n            rowList: [10, 50, 100],\n            sortname: \'time_stamp\',\n            sortorder: "desc",\n            viewrecords: true,\n            autowidth: true,\n            height: 250,\n            ondblClickRow: function(rowId) {\n                $.ajax({\n                            type: "GET",\n                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/checkTraffic?traffic_id=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('",\n                            contentType: "application/json; charset=utf-8",\n                            data: { \'icc\':icc },\n                            success: function(data) {\n\n\n                                if (data.status==0){\n                                    doDoubleClick(rowId)\n                                }\n                                if (data.status==1){\n                                    doDoubleClick(rowId)\n                                }\n                                if (data.status==2){\n                                    $.alert("No esta autorizado para abrir el dedicado", { autoClose:false,});\n                                }\n\n                            },\n                            error: function() {\n                            $.alert("Error accediendo operators log", { autoClose:false,});\n                            return true;\n                            },\n                            complete: function() {\n\n                            }\n                        });\n                //doDoubleClick(rowId)\n            },\n            //caption: header_container,\n        });\n        grid.jqGrid(\'navGrid\',grid_pager,{edit:false,add:false,del:false, search:true},\n                        editParams,\n                        addParams,\n                        deleteParams,\n                        searchParams,\n                        viewParams);\n        // add custom button\n        grid.navButtonAdd(grid_pager,\n            {\n                buttonicon: "ui-icon-plus",\n                title: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                caption: "')
        __M_writer(escape(_('Add')))
        __M_writer('",\n                position: "first",\n                onClickButton: AddCallerEvent\n            });\n\n\n        });\n        $.extend($.jgrid.nav,{alerttop:1});\n        function doDoubleClick(rowId){\n            var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n            var listenerNumber=rowData[\'listener\'];\n            var attendedState=rowData[\'attended_state\'];\n\n            var winHeight=Math.round(window.innerHeight*.77)\n            var winWidth=Math.round(window.innerWidth*.86)\n            var SplitText = "')
        __M_writer(escape(_('Title')))
        __M_writer('"\n            var $dialog = $(\'<div></div>\') /* Dialog for Instalation Report*/\n                .html(SplitText )\n                .dialog({\n                    autoOpen: false,\n                    modal: true,\n                    height: winHeight-50,\n                    width:  winWidth-100,\n                    close: function(event,ui){\n                        $dialog.hide();\n                        $(this).hide();\n                    },\n                    title: \'Installation Report:\'}\n                    );\n            function updateState(rowId,state){\n                $.ajax({\n                    type: "GET",\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/updateTrafficStatus?traffic_id=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('"+"&state="+state+"&comment="+$("#comment").val()+"&false_alarm="+$(\'#alarmcheck\').is(\':checked\'),\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'param\':\'gaugeParameters\' },\n                    success: function(data) {\n                        // data.value is the success return json. json string contains key value\n                        //{\'user\': \'dispatch\', \'toattend_statistic\': 0, \'score_statistic\': 99.99450277609807, \'attended_statistic\': 1, \'closed_statistic\': 18190}\n                        attendedGage.refresh(data.attended_statistic);\n                        toAttendGage.refresh(data.toattend_statistic);\n                        closedGage.refresh(data.closed_statistic);\n                        scoreGage.refresh(data.score_statistic);\n                        var res=$("#comment").val();\n                        var st=$(\'#alarmcheck\').is(\':checked\');\n                        $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                        activateTab(\'eventData\');\n                        $(\'#commentForm\')[0].reset();\n                        return true;\n                    },\n                    error: function() {\n                    //alert("#"+ckbid);\n                        $.alert("Error accessing /traffic/updateTrafficStatus", { autoClose:false,});\n\n                        return true;\n                    },\n                    complete: function() {\n                    }\n                    });\n                return true;\n\n            }\n            function PoP() {\n                            var row = $(this).data(\'rowId\');\n                            var putpendigDialog = $( "#putpendingForm" ).dialog({\n                                    autoOpen: false,\n                                    height: winHeight-100,\n                                    width: winWidth-200,\n                                    modal: true,\n                                    buttons: {\n                                        Submit: function() { //submit\n                                            function SpellChecker3(parameter) {\n                                               var isSuccess = false;\n                                               $.ajax({ url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/spellChecker?text=\'+parameter,\n                                                        data: {},\n                                                        async: false,\n                                                        success:\n                                                            function(parameterdata) {\n                                                                 if (parameterdata.error=="ok"){\n                                                                            isSuccess=true\n                                                                        }\n                                                                        else{\n                                                                            isSuccess=false;\n                                                                        }\n                                               }\n                                                      });\n                                                return isSuccess;\n                                            }\n                                            jQuery.validator.addMethod("wordCountPending", function(value, element, params){\n                                                return (SpellChecker3(value));\n                                            }, "A minimum of 10 words are required");\n                                            //add the custom validation method\n\n                                            $( "#pendingForm" ).validate({\n                                                              rules: {\n                                                                   pendingcomment:{required:true, wordCountPending: [\'10\']},\n                                                                  }\n                                                            });\n                                            if($("#pendingForm").valid()){   // test for validity\n                                              var row = $(this).data(\'rowId\');\n                                              updateState(row,"P");\n                                              $( this ).dialog( "close" );\n                                              var pc = $(\'#pendingcomment\').val();\n                                              $.ajax({\n                                                            type: "GET",\n                                                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/addPending?traffic_id=\'+row+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('"+"&comment="+pc,\n                                                            contentType: "application/json; charset=utf-8",\n                                                            data: { \'param\':\'gaugeParameters\' },\n                                                            success: function(data) {\n                                                            // data.value is the success return json. json string contains key value\n                                                                $.alert("Pendiente Exitoso", { autoClose:true,type: \'success\',});\n                                                                $(\'#pendingForm\')[0].reset();\n                                                            },\n                                                            error: function() {\n                                                            $.alert("Error accessing traffic/addPending", { autoClose:false,});\n                                                            return true;\n                                                            },\n                                                            complete: function() {\n\n                                                            }\n                                              });\n                                              trafficDialog.dialog( "close" );\n                                              $( this ).dialog( "close" );\n                                            }\n                                        },\n                                        Cancel: function() { //cancel\n                                            $(\'#pendingForm\')[0].reset();\n                                            $( this ).dialog( "close" );\n                                        }\n                                    }\n                                    ,\n                                    close: function() {\n                                        $(\'#commentForm\')[0].reset();\n                                        //form[ 0 ].reset();\n                                        //allFields.removeClass( "ui-state-error" );\n                                    }\n                             });\n                            putpendigDialog.data("rowId",row);\n                            putpendigDialog.dialog( "open" );\n                            //trafficDialog.dialog( "close" );\n                        };\n            function activateTab(tab){\n                $(\'.nav-tabs a[href="#\' + tab + \'"]\').tab(\'show\');\n            };\n            function initMap(latitude,longitude,cell_lat,cell_lon){\n                var myLatLng = {lat: latitude, lng: longitude};\n               // var myLatLng = new google.maps.LatLng(latitude, longitude);\n                map = new google.maps.Map(document.getElementById("map_canvas"), {\n                  zoom: 12,\n                  center: myLatLng\n                });\n                 var marker = new google.maps.Marker({\n                          position: myLatLng,\n                          map: map\n                        });\n\n                marker.setMap(map);\n\n                if ( cell_lon!=0 && cell_lat!=0){\n                    var CellIdLatLng = {lat: cell_lat, lng: cell_lon};\n                    var marker2 = new google.maps.Marker({\n                    position: CellIdLatLng,\n                    map: map,\n                    icon: "')
        __M_writer(escape(h.url()))
        __M_writer('/img/yellow-dot.png"\n                });\n\n                }\n\n                google.maps.event.trigger(map, \'resize\');\n                $("#map_canvas").css("width", Math.round(window.innerHeight*.40)).css("height", Math.round(window.innerHeight*.40));\n\n                $(\'a[data-toggle="tab"]\').on(\'shown.bs.tab\', function (e) {\n                  var target = $(e.target).attr("href") // activated tab\n\n                    if (target===\'#locationMap\'){\n                        google.maps.event.trigger(map, \'resize\');\n                        map.setCenter(marker.getPosition());\n                    }\n\n                });\n            }\n            var buttons = {\n            };\n            buttons["')
        __M_writer(escape(_('Bitácora')))
        __M_writer('"]=  function() {\n                $.ajax({\n                            type: "GET",\n                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getOperatorLog?traffic_id=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('"+"&tz=')
        __M_writer(escape(tz))
        __M_writer('",\n                            contentType: "application/json; charset=utf-8",\n                            data: { \'icc\':icc },\n                            success: function(data) {\n                                var array=data.operatorlog;\n                                var winHeight = 400; //Math.round(window.innerHeight * .50)\n                                var winWidth = 810;//Math.round(window.innerWidth * .50)\n                                var newDiv = $(document.createElement(\'div\'));\n                                html=\'<br>\' +\n                                    \'<h5>Listado de Operaciones</h5>\' +\n                                    \'<ul>\'\n                                for(var i = 0; i < array.length; i++){\n                                      html=html+\'<li>\'+array[i]+\'</li>\';    //no .value here\n                                   }\n\n                                html=html+\'</ul>\'\n                                newDiv.html(html);\n                                var createUsersSticky = newDiv.dialog({\n                                                    autoOpen: false,\n                                                    title: "Bitácora",\n                                                    height: winHeight - 20,\n                                                    width: winWidth,\n                                                    modal: true,\n                                                    close: function () {\n                                                    }\n                                                });\n\n                                createUsersSticky.dialog("open");\n                                //alert(data.operatorlog);\n                            },\n                            error: function() {\n                            $.alert("Error accediendo operators log", { autoClose:false,});\n                            return true;\n                            },\n                            complete: function() {\n\n                            }\n                        });\n\n            }\n            buttons["')
        __M_writer(escape(_('Posicion Telefonica')))
        __M_writer('"]=  function() {\n                $.ajax({\n                            type: "GET",\n                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getTelefonicaPosition?traffic_id=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('",\n                            contentType: "application/json; charset=utf-8",\n                            data: { \'icc\':icc },\n                            success: function(data) {\n                                if (data.error=="ok"){\n                                     $.alert("Punto Agregado:"+data.latitude+","+data.longitude, { autoClose:true,type: \'success\',});\n                                     console.log(typeof data.latitude)\n                                    var HomeLatLng = {lat: data.latitude, lng: data.longitude};\n                                    var marker3 = new google.maps.Marker({\n                                        position: HomeLatLng,\n                                        map: map,\n                                        icon: "')
        __M_writer(escape(h.url()))
        __M_writer('/img/blue-dot.png"\n                                    });\n                                }\n                                else {\n                                    $.alert("Error:"+data.error, { autoClose:false,});\n                                }\n\n                            },\n                            error: function() {\n                            $.alert("Error accediendo telefonica posicion", { autoClose:false,});\n                            return true;\n                            },\n                            complete: function() {\n\n                            }\n                        });\n\n            }\n            buttons["')
        __M_writer(escape(_('Posicion Plataforma')))
        __M_writer('"]=  function() {\n                image_counter=image_counter+1;\n                if (image_counter>10){\n                     $.alert("Error: Mas de diez puntos", { autoClose:false,});\n                }\n                else\n                {\n                var imagename = image_counter.toString();\n                $.ajax({\n                            type: "GET",\n                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getPlataformPosition?traffic_id=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('",\n                            contentType: "application/json; charset=utf-8",\n                            data: { \'icc\':icc },\n                            success: function(data) {\n                                if (data.error=="ok"){\n                                     $.alert("Punto Agregado:"+data.latitude+","+data.longitude, { autoClose:true,type: \'success\',});\n                                     console.log(typeof data.latitude)\n                                    var HomeLatLng = {lat: data.latitude, lng: data.longitude};\n                                    var marker3 = new google.maps.Marker({\n                                        position: HomeLatLng,\n                                        map: map,\n                                        icon: "')
        __M_writer(escape(h.url()))
        __M_writer('/img/"+imagename+".png"\n                                    });\n                                }\n                                else {\n                                    $.alert("Error:"+data.error, { autoClose:false,});\n                                }\n\n                            },\n                            error: function() {\n                            $.alert("Error accediendo telefonica posicion", { autoClose:false,});\n                            return true;\n                            },\n                            complete: function() {\n\n                            }\n                        });\n\n\n                }\n            }\n            buttons["')
        __M_writer(escape(_('Alarma C5')))
        __M_writer('"]=  function() {\n                        var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                        var c5_vehicle=rowData[\'vehicle\'];\n                        var c5_imei=rowData[\'imei\'];\n                        var c5_latitude=rowData[\'latitude\'];\n                        var c5_longitude=rowData[\'longitude\'];\n                        var c5_speed=rowData[\'speed\'];\n                        var c5_heading=rowData[\'azimuth\'];\n                        var c5_plates=c5plates;\n\n                        $(\'#C5Vehicle\').text(c5_vehicle);\n                        $(\'#C5Imei\').text(c5_imei);\n                        $(\'#C5Plates\').text(c5_plates);\n                        $(\'#C5Latitude\').text(c5_latitude);\n                        $(\'#C5Longitude\').text(c5_longitude);\n                        $(\'#C5Speed\').text(c5_speed);\n                        $(\'#C5Heading\').text(c5_heading);\n\n                        var createC5Dialog = $( "#createC5Form" ).dialog({\n                                autoOpen: false,\n                                height: winHeight-20,\n                                width: winWidth,\n                                modal: true,\n                                buttons: {\n                                    Cancel: function() {\n                                    createC5Dialog.dialog( "close" );\n                                    },\n                                    "')
        __M_writer(escape(_('Enviar Alerta')))
        __M_writer('": function() {\n                                        if (confirm(\'Esta seguro de enviar la alerta al C5 ?\')) {\n                                            $.ajax({\n                                                type: "GET",\n                                                url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/send2C5?traffic_id=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('"+"&vehicle="+c5_vehicle+"&imei="+c5_imei+"&plates="+c5_plates+"&latitude="+c5_latitude+"&longitude="+c5_longitude+"&speed="+c5_speed+"&heading="+c5_heading,\n                                                contentType: "application/json; charset=utf-8",\n                                                data: { \'param\':\'gaugeParameters\' },\n                                                success: function(data) {\n                                                    $.alert("Ticket de Respuesta:"+data.Ticket, { autoClose:false,type: \'success\'});\n                                                    $(\'#ticketForm\')[0].reset();\n                                                },\n                                                error: function() {\n                                                $.alert("Error accediendo alerta/enviar al c5", { autoClose:false,});\n                                                return true;\n                                                },\n                                                complete: function() {\n\n                                                }\n                                             });\n                                        } else {\n                                            // Do nothing!\n                                        }\n\n                                        createC5Dialog.dialog( "close" );\n                                    }\n                                },\n\n                                close: function() {\n                                    //form[ 0 ].reset();\n                                    //allFields.removeClass( "ui-state-error" );\n                                }\n                        });\n                        createC5Dialog.data("rowId",rowId);\n                        createC5Dialog.data("state",atst);\n                        createC5Dialog.dialog( "open" );\n                        //trafficDialog.dialog( "close" );\n                    };\n            buttons["')
        __M_writer(escape(_('Add Image')))
        __M_writer('"]=  function() {\n                            var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                            var traffic_id=rowData[\'id\'];\n                            var addGlobalExpButtons = {\n                                    "')
        __M_writer(escape(_('Add')))
        __M_writer('": function() {\n                                        var input = document.querySelector(\'input[type=file]\')\n                                        var currentUser="')
        __M_writer(escape(user))
        __M_writer('";\n                                        var currentGroup="')
        __M_writer(escape(group))
        __M_writer('"\n                                        file = input.files[0];\n                                        var formData = new FormData();\n                                        formData.append("userfile", file);\n                                        formData.append("traffic_id", traffic_id);\n                                        formData.append("user", currentUser);\n                                        formData.append("group", currentGroup);\n                                        var request = new XMLHttpRequest();\n                                        request.open("POST", \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/uploadImage\');\n                                        request.send(formData);\n                                        createExpWindow.dialog( "close" );\n                                        trafficDialog.dialog( "close" );\n                                    },\n                                    "')
        __M_writer(escape(_('Close')))
        __M_writer('": function() {\n                                        $(\'#jgGridMS03Trackers\').trigger( \'reloadGrid\' );\n                                        createExpWindow.dialog( "close" );\n                                    }\n                            };\n                            var winHeight=250;\n                            var winWidth=500;\n                            if ($("#MS03UsesrForm").length){\n                                $("#MS03UsesrForm").remove();\n                            }\n\n                            var createExpWindow = $("#addImageForm").dialog({\n                                autoOpen: false,\n                                title: "CSV Upload",\n                                height: winHeight - 20,\n                                width: winWidth,\n                                modal: true,\n                                buttons: addGlobalExpButtons,\n                                close: function () {\n                                },\n\n                            });\n                        createExpWindow.dialog("open");\n                        };\n\n            buttons["')
        __M_writer(escape(_('Put on Pending')))
        __M_writer('"]=  PoP;\n\n\n            //if(listenerNumber==4) {\n            buttons["')
        __M_writer(escape(_('Create Ticket')))
        __M_writer('"]=  function() {\n                            var row = $(this).data(\'rowId\');\n                            $(\'#lastReport\').datetimepicker({\n                                dateFormat: \'yy/mm/dd\',\n                            timeFormat: "hh:mm:ss"});\n                            var createTicketDialog = $( "#createTicketForm" ).dialog({\n                                    autoOpen: false,\n                                    height: winHeight-20,\n                                    width: winWidth,\n                                    modal: true,\n                                    buttons: {\n                                        Cancel: function() {\n                                        createTicketDialog.dialog( "close" );\n                                        },\n                                        "')
        __M_writer(escape(_('Create Ticket')))
        __M_writer('": function() {\n                                                function SpellChecker2(parameter) {\n                                                   var isSuccess = false;\n                                                   $.ajax({ url:  \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/spellChecker?text=\'+parameter,\n                                                            data: {},\n                                                            async: false,\n                                                            success:\n                                                                function(parameterdata) {\n                                                                     if (parameterdata.error=="ok"){\n                                                                                isSuccess=true\n                                                                            }\n                                                                            else{\n                                                                                $.alert(parameterdata.error)\n                                                                                isSuccess=false;\n                                                                            }\n                                                   }\n                                                          });\n                                                    return isSuccess;\n                                                }\n                                                jQuery.validator.addMethod("wordCount2", function(value, element, params){\n                                                    return (SpellChecker2(value));\n                                                }, "A minimum of 10 words are required");\n                                                //add the custom validation method\n\n                                                $( "#ticketForm" ).validate({\n                                                  rules: {\n                                                       ticket:{required:true,\n                                                           wordCount2: [\'10\']\n                                                       },\n                                                      }\n                                                });\n\n                                                if($("#ticketForm").valid()) {\n                                                    var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n                                                    var recordId=rowData[\'id\'];\n                                                    var ticketComment = $(\'#ticket\').val();\n                                                    var lastReport=$(\'#lastReport\').val();\n                                                    $.ajax({\n                                                            type: "GET",\n                                                            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/addTicket?traffic_id=\'+recordId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('"+"&comment="+ticketComment+"&lastReport="+lastReport,\n                                                            contentType: "application/json; charset=utf-8",\n                                                            data: { \'param\':\'gaugeParameters\' },\n                                                            success: function(data) {\n                                                            // data.value is the success return json. json string contains key value\n\n                                                                $.alert("Ticket "+data.Ticket+" created sucessfully", { autoClose:false,});\n                                                                $(\'#ticketForm\')[0].reset();\n                                                            },\n                                                            error: function() {\n                                                            $.alert("Error accediendo a Venus no se puede crear ticket", { autoClose:false,});\n                                                            return true;\n                                                            },\n                                                            complete: function() {\n\n                                                            }\n                                                         });\n                                                    createTicketDialog.dialog( "close" );\n                                                }\n                                        }\n                                    },\n\n                                    close: function() {\n                                        //form[ 0 ].reset();\n                                        //allFields.removeClass( "ui-state-error" );\n                                    }\n                            });\n                            createTicketDialog.data("rowId",rowId);\n                            createTicketDialog.data("state",atst);\n                            createTicketDialog.dialog( "open" );\n                            //trafficDialog.dialog( "close" );\n                        };\n            //}\n            buttons["')
        __M_writer(escape(_('Finalize')))
        __M_writer('"]=  function() {\n                            var callerEventState = $(this).data(\'ces\');\n                            if (callerEventState=="N"){\n                                $.alert("You are not authorized to finalize", { autoClose:false,});\n                            }\n                            else{\n                                $(\'#finalizeForm\').dialog(\'option\', \'buttons\', submitFinalizeButtons);\n                                var row = $(this).data(\'rowId\');\n                                finalizeDialog.data(\'rowId\',row);\n                                finalizeDialog.dialog( "open" );\n                            }\n\n                        };\n\n            var trafficDialog = $( "#trafficForm" ).dialog({\n                    autoOpen: false,\n                    height: winHeight,\n                    width: winWidth,\n                    modal: true,\n                    buttons: buttons,\n                    closeOnEscape:false,\n                    close: function() {\n                        //form[ 0 ].reset();\n                        //allFields.removeClass( "ui-state-error" );\n                    },\n\n\n                });\n            var finalizeButtons = {\n                        "')
        __M_writer(escape(_('Exit')))
        __M_writer('": function() {\n                            $(\'#commentForm\')[0].reset();\n                            finalizeDialog.dialog( "close" );\n                        }\n            };\n            var submitFinalizeButtons = {\n                        "')
        __M_writer(escape(_('Submit')))
        __M_writer('": function() {\n                        function SpellChecker(parameter) {\n                           var isSuccess = false;\n                           $.ajax({ url:  \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/spellChecker?text=\'+parameter,\n                                    data: {},\n                                    async: false,\n                                    success:\n                                        function(parameterdata) {\n                                             if (parameterdata.error=="ok"){\n                                                        isSuccess=true\n                                                    }\n                                                    else{\n                                                        $.alert(parameterdata.error)\n                                                        isSuccess=false;\n                                                    }\n                           }\n                                  });\n                            return isSuccess;\n                        }\n                        jQuery.validator.addMethod("wordCount", function(value, element, params){\n                            return (SpellChecker(value));\n                        }, "A minimum of 10 words are required");\n                        //add the custom validation method\n                        $( "#commentForm" ).validate({\n                                          rules: {\n                                               comment:{required:true, wordCount: [\'10\']},\n                                              }\n                                        });\n                        if($("#commentForm").valid()){   // test for validity\n                         var row = $(this).data(\'rowId\');\n                         updateState(row,\'C\');\n                         finalizeDialog.dialog( "close" );\n                         trafficDialog.dialog( "close" );\n                            }\n                        },\n                        "')
        __M_writer(escape(_('Exit')))
        __M_writer('": function() {\n                            $(\'#commentForm\')[0].reset();\n                            finalizeDialog.dialog( "close" );\n                            }\n                        };\n            var finalizeDialog = $( "#finalizeForm" ).dialog({\n                    autoOpen: false,\n                    height: winHeight-100,\n                    width: winWidth-200,\n                    modal: true,\n                    buttons: finalizeButtons,\n                    close: function() {\n                        $(\'#commentForm\')[0].reset();\n                        //form[ 0 ].reset();\n                        //allFields.removeClass( "ui-state-error" );\n                    }\n             });\n\n            $("#helpComment").change(function(){\n              var id = $(this).find("option:selected").attr("value");\n              $("#comment").val(id);\n            });\n            $("#helpComment2").change(function(){\n              var id = $(this).find("option:selected").attr("value");\n              $("#pendingcomment").val(id);\n            });\n\n\n            var rowData = jQuery(\'#jqGridAlerts\').getRowData(rowId);\n            var atst=rowData[\'attended_state\'];\n            var azimuth=rowData[\'azimuth\'];\n            var degrees=parseInt(azimuth);\n            var eventdescript=rowData[\'event_desc\'];\n            var vehicledescript=rowData[\'vehicle\'];\n            var eventtime=rowData[\'time_stamp\'];\n            $("#compassNeedle").rotate(degrees);\n            $("#eventHeading").text(eventdescript);\n            $("#vehicleDescription").text(vehicledescript);\n            $("#eventTime").text(eventtime);\n            $("#degreesAzimuth").html(\'<p>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\'+degrees+String.fromCharCode(176)+\'</p>\');\n            var urlinstall=\'\';\n            $.ajax({\n            type: "GET",\n\n            url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getRecord?record=\'+rowId+"&user=')
        __M_writer(escape(user))
        __M_writer('"+"&group=')
        __M_writer(escape(group))
        __M_writer('"+"&state=open"+"&tz=')
        __M_writer(escape(tz))
        __M_writer('",\n            contentType: "application/json; charset=utf-8",\n            data: { \'param\':\'gaugeParameters\' },\n            success: function(parameterdata) {\n                function dateFmatter ( cellvalue, options, rowObject )\n                {\n                    var utcDate=moment.utc(cellvalue,"YYYY-MM-DD h:mm:ss")\n                    var localDate=moment(utcDate).local();\n                    var formatdate = localDate.format("YYYY-MM-DD HH:mm:ss");\n                    return formatdate;\n                }\n                //Insert HTML code\n\n                $("#account").html(parameterdata.account);\n                $("#event").html(parameterdata.event);\n                $("#vehicle").html(parameterdata.vehicle);\n                $("#callerList").html(parameterdata.callerlist);\n                $("#accountHistory").html(parameterdata.accounthistory);\n                $("#comment").val(parameterdata.comment);\n                $("#alarmcheck").val(parameterdata.false_alarm);\n                $("#eventLink").html(parameterdata.platform);\n                $("#images").html(parameterdata.images);\n                // Render time in local\n                $(\'#ts\').text(dateFmatter(parameterdata.ts));\n                $(\'#et\').text(dateFmatter(parameterdata.et));\n                $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                $("#trafficForm").show();\n                $("#dialog").dialog();\n                c5plates=parameterdata.plates;\n                urlinstall=parameterdata.link;\n                icc=parameterdata.icc;\n                initMap(parameterdata.latitude, parameterdata.longitude,parameterdata.cell_lat,parameterdata.cell_lon);\n                activateTab(\'account\');\n                if (parameterdata.attended_state=="C"){\n                    $(\'#finalizeForm\').dialog(\'option\', \'buttons\', finalizeButtons);\n                    finalizeDialog.dialog( "open" );\n                }\n                else{\n                    if(parameterdata.attended_state=="N"){\n                        updateState(rowId,"A");\n                    }\n                //get other data\n\n                trafficDialog.data("rowId",rowId);\n                trafficDialog.data("state",atst);\n                trafficDialog.data("ces",parameterdata.callerEventState);\n                trafficDialog.dialog( "open" );\n                }\n            },\n            error: function (xhr, ajaxOptions, thrownError) {\n                if (xhr.status==503){\n                    $.alert("Servicio no disponible en pluton", { autoClose:false,});\n\n                }\n                else{\n                    $.alert(xhr.status, { autoClose:false,});\n\n                }\n              },\n            complete: function() {\n                $(\'#button\').on(\'click\', function(e){\n                    if(urlinstall!=\'dontHave\'){\n                        //$dialog.dialog(\'open\');\n                        //alert(urlinstall);\n                        //$dialog.html("<iframe width=\'100%\' height=\'100%\' src=\'"+urlinstall+"\' frameborder=\'0\' border=\'none\'></iframe>");\n                        window.open(urlinstall, \'_blank\');\n                    }else{\n                        $.alert("Pluton no tiene la liga");\n                    }\n\n                    });\n            }\n            });\n        }\n        function AddCallerEvent() {\n            var winHeight=Math.round(window.innerHeight*.75);\n            var winWidth=Math.round(window.innerWidth*.85);\n                        // Event Routines\n            var event_grid_name = \'#jqGridCallerEvent\';\n\n            var event_grid_pager= \'#listPagerTables\';\n            var event_update_url=\'')
        __M_writer(escape(h.url()))
        __M_writer("/traffic/updateCallerEvent';\n            var event_load_url='")
        __M_writer(escape(h.url()))
        __M_writer('/traffic/loadCallerEvent/\';\n            var event_header_container=\'Evento por llamada\';\n            var event_addParams = {left: 0,width: window.innerWidth-700,top: 20,height: 190,url: event_update_url, closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var event_editParams = {left: 0,width: window.innerWidth-700,top: 20,height: 200,url: event_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,modal: true,\n                    width: "500",\n                    editfunc: function (rowid) {\n                    $.alert(\'The "Edit" button was clicked with rowid=\' + rowid, { autoClose:false,});\n\n                    }\n                };\n            var event_deleteParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: event_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var event_viewParams = {left: 0,width: window.innerWidth-700,top: 20,height: 130,url: event_update_url,closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true}\n            var event_searchParams = {top: 20,height: 130,width: "500",closeAfterAdd: true,closeAfterEdit: true,closeAfterSearch:true,url: event_update_url,modal: true, };\n            var event_grid = jQuery(event_grid_name);\n            event_grid.jqGrid({\n                url: event_load_url,\n                datatype: \'json\',\n                mtype: \'GET\',\n                colNames: [\'id\', \'St\', \'imei\',\'ccid\',\'Phone\',\'L.Report\',\'Device\',\'Eco\',\'Brand\',\'Model\',\'Year\',\'Color\',\'Plates\',\'VIN\',\'User\',\'Password\',\'Client ID\',\'Server\',\'Internal Id\'],\n                colModel: [\n                    {name: \'id\',index: \'id\', width: 5,align: \'left\',key:true,hidden: true, editable: true,edittype: \'text\',editrules: {required: true}},\n                    {name: \'status\', index: \'status\', width: 5,align: \'right\',hidden: true, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'imei\', index: \'imei\', width:18,align: \'right\',hidden: true, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'ccid\', index: \'ccid\', width: 15,align: \'right\',hidden: true, editable: true, edittype: \'text\', editrules: {required: true}},\n                    {name: \'phone\', index: \'phone\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'last_report\', index: \'last_report\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'device\', index: \'device\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'eco\', index: \'eco\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'brand\', index: \'brand\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'model\', index: \'model\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'year\', index: \'year\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'color\', index: \'color\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'plates\', index: \'plates\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'vin\', index: \'vin\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'user\', index: \'user\', width: 10,align: \'right\',hidden: false, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'password\', index: \'password\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'client_id\', index: \'client_id\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'server\', index: \'server\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n                    {name: \'internal_id\', index: \'internal_id\', width: 10,align: \'right\',hidden: true, editable: true, edittype: \'text\',  editrules: {required: true}},\n\n                ],\n                pager: jQuery(event_grid_pager),\n                rowNum: 10,\n                rowList: [10, 50, 100],\n                sortname: \'id\',\n                sortorder: "asc",\n                viewrecords: true,\n                width: winWidth-40,\n                height: winHeight-160,\n\n                ondblClickRow: function(rowId) {\n                    var rowData = jQuery(this).getRowData(rowId);\n                    var im=rowData[\'imei\'];\n                    var ve=rowData[\'brand\']+\' \'+rowData[\'model\']+\' \'+rowData[\'year\']+\' \'+rowData[\'color\'];\n                    var ci=rowData[\'client_id\'];\n                    //load form\n                    $.ajax({\n                    type: "GET",\n                    url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getDynamicTemplate/\'+"?listener="+$( "input:checked" ).val()  ,\n                    contentType: "application/json; charset=utf-8",\n                    data: { \'param\':\'gaugeParameters\' },\n                    success: function(parameterdata) {\n                        //Insert HTML code\n                        $( "#callerEventForm01" ).html(parameterdata.eventtemplate);\n                    },\n                    error: function() {\n                        $.alert("Error accessing server /alerts/getRecord", { autoClose:false,});\n\n                    },\n                    complete: function() {\n\n                        var winHeight=Math.round(window.innerHeight*.75);\n                        var winWidth=Math.round(window.innerWidth*.75);\n                        var assignDialog = $( "#callerEventForm01" ).dialog({\n                            autoOpen: false,\n                            height: winHeight,\n                            width: winWidth,\n                            modal: true,\n                            buttons: {\n                                "')
        __M_writer(escape(_('Crear Evento')))
        __M_writer('": function() {\n                                        var sp = $(\'#selectedpriority\').val();\n                                        var ev = $(\'#event_id\').val();\n                                        var cm = $(\'#callercomment\').val();\n                                        var un ="')
        __M_writer(escape(group))
        __M_writer('";\n\n                                        function EventSpellChecker(parameter) {\n                                           var isEventSuccess = false;\n                                           $.ajax({ url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/spellChecker?text=\'+parameter,\n                                                    data: {},\n                                                    async: false,\n                                                    success:\n                                                        function(parameterdata) {\n                                                             if (parameterdata.error=="ok"){\n                                                                        isEventSuccess=true\n                                                                    }\n                                                                    else{\n                                                                        $.alert(parameterdata.error);\n                                                                        isEventSuccess=false;\n                                                                    }\n                                           }\n                                                  });\n                                            return isEventSuccess;\n                                        }\n                                        jQuery.validator.addMethod("EventwordCount", function(value, element, params){\n                                            return (EventSpellChecker(value));\n                                        }, "A minimum of 10 words are required");\n                                        $( "#eventsForm" ).validate({\n                                          rules: {\n                                               callercomment:{required:true,EventwordCount: [\'10\']},\n                                              }\n                                        });\n\n                                        if($("#eventsForm").valid()){   // test for validity\n                                         $.ajax({\n                                                type: "GET",\n\n                                                url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/addTraffic/\'+"?priority="+sp+"&event_id="+ev+"&user_name="+un+"&imei="+im+"&vehicle="+ve+"&comment="+cm+"&client_id="+ci+\'&group=\'+"')
        __M_writer(escape(group))
        __M_writer('",\n                                                contentType: "application/json; charset=utf-8",\n                                                data: { \'param\':\'gaugeParameters\' },\n                                                success: function(data) {\n                                                // data.value is the success return json. json string contains key value\n                                                    $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                                                    doDoubleClick(data.id);\n                                                    $(\'#eventsForm\')[0].reset();\n                                                    assignDialog.dialog( "close" );\n                                                    addCallerEventDialog.dialog( "close" );\n                                                },\n                                                error: function() {\n                                                $.alert("Error accessing tables/addPriority", { autoClose:false,});\n                                                assignDialog.dialog( "close" );\n                                                addCallerEventDialog.dialog( "close" );\n                                                return true;\n                                                },\n                                                complete: function() {\n\n                                                }\n                                             });\n                                         }\n\n                                },\n                                Cancel: function() {\n                                    assignDialog.dialog( "close" );\n                                    addCallerEventDialog.dialog( "close" );\n                                }\n                            },\n\n                            close: function() {\n                                //form[ 0 ].reset();\n                                //allFields.removeClass( "ui-state-error" );\n                            }\n                        });\n                        assignDialog.data("rowId",rowId);\n\n                        assignDialog.dialog( "open" );\n                    }\n                    });\n\n\n\n                },\n            });\n            event_grid.jqGrid(\'filterToolbar\', {stringResult: true, searchOnEnter: false, defaultSearch : "cn"});\n\n            event_grid.jqGrid(\'navGrid\',event_grid_pager,{edit:false,add:false,del:false, search:true},\n                            event_editParams,\n                            event_addParams,\n                            event_deleteParams,\n                            event_searchParams,\n                            event_viewParams)\n\n            $("#callerEventGrid01").show();\n            var addCallerEventDialog = $( "#callerEventGrid01" ).dialog({\n                    autoOpen: false,\n                    height: winHeight,\n                    width: winWidth,\n                    modal: true,\n                    close: function() {\n                        //$(\'#filter01Form\')[0].reset();\n                        //form[ 0 ].reset();\n                        //allFields.removeClass( "ui-state-error" );\n                    }\n             });\n\n            addCallerEventDialog.data(\'rowId\',1);\n            addCallerEventDialog.dialog( "open" );\n        }\n        // STOMP\n\n        var traffic_client = Stomp.client(\'')
        __M_writer(escape(h.stompServer()))
        __M_writer("');\n        traffic_client.debug=null;\n        var traffic_connect_callback = function() {\n            var group_str='")
        __M_writer(escape(group))
        __M_writer('\';\n            var group_list=group_str.split(",");\n            var i;\n            for (i = 0; i < group_list.length; i++) {\n                //alert(group_list[i]);\n                traffic_client.subscribe("/topic/trafficlistener_"+group_list[i], traffic_subscribe_callback);\n            }\n\n            // called back after the client is connected and authenticated to the STOMP server\n          };\n        var traffic_error_callback = function(error) {\n            $.alert(error, { autoClose:false,});\n        };\n        var traffic_subscribe_callback = function(message) {\n\n            var msg = message.body;\n            //var subscription = message.headers.subscription ;\n            var payload = msg.split(\'|\');\n            var command = payload[0];\n            var action = payload[1];\n\n            switch (command) {\n                    case \'REPAINT\':\n                        $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                        $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getGauges?group=\' +"')
        __M_writer(escape(group))
        __M_writer('",\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                            $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                            attendedGage.refresh(data.attended_statistic);\n                            toAttendGage.refresh(data.toattend_statistic);\n                            closedGage.refresh(data.closed_statistic);\n                            scoreGage.refresh(data.score_statistic);\n\n                        },\n                        error: function() {\n                        //alert("#"+ckbid);\n                            $.alert("Error accessing /getUser", { autoClose:false,});\n\n                            return true;\n                        },\n                        complete: function() {\n                        }\n                        });\n                        break;\n                    case \'RELOAD\':\n\n                        $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getGauges?group=\' +"')
        __M_writer(escape(group))
        __M_writer('",\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                                                    if(action=="1"){\n                            ding.play();\n                        }\n                        if(action=="2"){\n                            claxon.play();\n                        }\n                        if(action=="3"){\n                            bell.play();\n                        }\n                        if(action=="4"){\n                            buzzer.play();\n                        }\n                        if(action=="5"){\n                            alarm.play();\n                        }\n                        $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                            $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                            attendedGage.refresh(data.attended_statistic);\n                            toAttendGage.refresh(data.toattend_statistic);\n                            closedGage.refresh(data.closed_statistic);\n                            scoreGage.refresh(data.score_statistic);\n                        //console.log("Action:"+action);\n                        //alert("action:"+action);\n\n\n                        },\n                        error: function() {\n                        //alert("#"+ckbid);\n                            $.alert("Error accessing /getUser", { autoClose:false,});\n                            return true;\n                        },\n                        complete: function() {\n                        }\n                        });\n\n\n                        break;\n                    case \'MSG\':\n                        $.alert(action, { autoClose:false,type: \'success\',});\n                        bell.play();\n                        break;\n                    case \'GAU\':\n                        $.ajax({\n                        type: "GET",\n                        url: \'')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/getGauges?group=\'+"')
        __M_writer(escape(group))
        __M_writer('",\n                        contentType: "application/json; charset=utf-8",\n                        data: { \'param\':\'gaugeParameters\' },\n                        success: function(data) {\n                            $(\'#jqGridAlerts\').trigger( \'reloadGrid\' );\n                            attendedGage.refresh(data.attended_statistic);\n                            toAttendGage.refresh(data.toattend_statistic);\n                            closedGage.refresh(data.closed_statistic);\n                            scoreGage.refresh(data.score_statistic);\n\n                        },\n                        error: function() {\n                        //alert("#"+ckbid);\n                            $.alert("Error accessing /getUser", { autoClose:false,});\n\n                            return true;\n                        },\n                        complete: function() {\n                        }\n                        });\n                        break;\n            }\n          };\n        var stompUser=\'')
        __M_writer(escape(h.stompUser()))
        __M_writer("';\n        var stompPass='")
        __M_writer(escape(h.stompPassword()))
        __M_writer('\';\n        traffic_client.connect(stompUser, stompPass, traffic_connect_callback, traffic_error_callback, \'/\');\n}\n$( document ).ready(function() {\n    trafficSegment();\n});\n</script>\n</div>\n    <!-- page start-->\n    <div id="callerEventForm01"  class="dialog-hidden" title="')
        __M_writer(escape(_('Traffic')))
        __M_writer('">\n    </div>\n    <div id="callerEventGrid01" class="dialog-hidden" title="')
        __M_writer(escape(_('Evento por llamada')))
        __M_writer('">\n        <table style="width:100%;overflow:auto;">\n        <table id="jqGridCallerEvent" class="scroll" cellpadding="0" cellspacing="0"></table>\n        <div id="listPagerTables" class="scroll" style="text-align:center;"></div>\n        <div id="listPsetcolsEvent" class="scroll" style="text-align:center;"></div>\n        </table>\n        <br>\n    </div>\n\n    <!-- Hidden POP UP start-->\n     <div id="addImageForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Upload Image')))
        __M_writer('">\n        <form action="')
        __M_writer(escape(h.url()))
        __M_writer('/traffic/uploadImage" name= "imagesForm" id="imagesForm" method="POST" enctype="multipart/form-data">\n        <input type="hidden" name="pagename" py:attrs="value=pagename"/>\n        <label for="upload_file">')
        __M_writer(escape(_('Filename')))
        __M_writer(':</label>\n            <br>\n            <p>')
        __M_writer(escape(_('Upload Image')))
        __M_writer(':  ')
        __M_writer(escape(_('Only')))
        __M_writer(' (jpeg,bmp and png)</p>\n            <br>\n        <input type="file" name="file" id="file" accept="image/vnd-wap-wbmp,image/png, image/jpeg" required/>  <br/>\n        <input type="submit" name="submit_upload" value="Upload"/>\n        </form>\n    </div>\n    <div id="trafficForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Traffic')))
        __M_writer('">\n        <ul class="nav nav-tabs">\n          <li><a data-toggle="tab" href="#account" >')
        __M_writer(escape(_('Account')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#event" >')
        __M_writer(escape(_('Event')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#vehicle" >')
        __M_writer(escape(_('Vehicle')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#callerList" >')
        __M_writer(escape(_('Caller List')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#accountHistory">')
        __M_writer(escape(_('Account History')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#images">')
        __M_writer(escape(_('Images')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#installationReport">')
        __M_writer(escape(_('Installation Report')))
        __M_writer('</a></li>\n          <li><a data-toggle="tab" href="#locationMap" data-toggle="tab">')
        __M_writer(escape(_('Map')))
        __M_writer('</a></li>\n        </ul>\n\n        <div class="tab-content">\n          <div id="account" class="tab-pane fade in active">\n          </div>\n          <div id="event" class="tab-pane fade in active">\n          </div>\n          <div id="vehicle" class="tab-pane fade in active">\n          </div>\n          <div id="callerList" class="tab-pane fade">\n          </div>\n          <div id="accountHistory" class="tab-pane fade">\n          </div>\n          <div id="images" class="tab-pane fade">\n\n\n          </div>\n          <div id="installationReport" class="tab-pane fade">\n              <br>\n              <button id="button" type="button" class="btn btn-default" data-toggle="button">')
        __M_writer(escape(_('Print')))
        __M_writer('</button>\n          </div>\n\n\n          <div id="locationMap" class="tab-pane fade">\n\n              <br>\n\n              <h4 id="eventHeading">')
        __M_writer(escape(_('Event')))
        __M_writer('</h4>\n              <div class="image123">\n                    <div class="imgContainer">\n                        <div id="map_canvas"></div>\n                    </div>\n\n                    <div class="imgContainer">\n                        <div class="azimuthimage">\n                           <img src="')
        __M_writer(escape(h.url()))
        __M_writer('/img/noneedlecompass.png" class="base"/>\n                           <img src="')
        __M_writer(escape(h.url()))
        __M_writer('/img/needle.png" id="compassNeedle" class="overlay" style="z-index: 1" />\n                        </div>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <br>\n                        <p id="degreesAzimuth">')
        __M_writer(escape(_('Degress')))
        __M_writer('</p>\n                    </div>\n                    <div class="imgContainer">\n                        <span class="text" id="vehicleDescription">')
        __M_writer(escape(_('Vehicle')))
        __M_writer('</span></div><br>\n                        <span class="text" id="eventTime">')
        __M_writer(escape(_('Event Time')))
        __M_writer('</span></div>\n                        <span class="text" id="eventLink">')
        __M_writer(escape(_('Link')))
        __M_writer('</span></div>\n                    </div>\n\n              </div>\n          </div>\n        </div>\n    </div>\n    <div id="finalizeForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Finalize')))
        __M_writer('">\n      <form id="commentForm">\n        <fieldset>\n            <select id="helpComment" name="helpComment">\n')
        for item in list:
            __M_writer('                    <option id="')
            __M_writer(escape(item['id']))
            __M_writer('" value="')
            __M_writer(escape(item['hcomment']))
            __M_writer('">')
            __M_writer(escape(item['hcomment']))
            __M_writer('</option>\n')
        __M_writer('            </select>\n            <br>\n            <label for="comment">')
        __M_writer(escape(_('Comment')))
        __M_writer(':</label>\n            <textarea class="form-control" rows="8" id="comment" name="comment" required onpaste="return false;" onCopy="return false" onCut="return false"></textarea>\n            <div class="checkbox">\n              <label><input type="checkbox" id="alarmcheck" value="">')
        __M_writer(escape(_('False Alarm')))
        __M_writer('</label>\n            </div>\n        </fieldset>\n      </form>\n    </div>\n    <div id="putpendingForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Pending Comment')))
        __M_writer('">\n      <form id="pendingForm">\n        <fieldset>\n            <select id="helpComment2" name="helpComment">\n')
        for item in list:
            __M_writer('                    <option id="')
            __M_writer(escape(item['id']))
            __M_writer('" value="')
            __M_writer(escape(item['hcomment']))
            __M_writer('">')
            __M_writer(escape(item['hcomment']))
            __M_writer('</option>\n')
        __M_writer('            </select>\n            <br>\n            <label for="pendingcomment">')
        __M_writer(escape(_('Comment')))
        __M_writer(':</label>\n            <textarea class="form-control" rows="7" id="pendingcomment" name="pendingcomment" required onpaste="return false;" onCopy="return false" onCut="return false"></textarea>\n        </fieldset>\n      </form>\n    </div>\n    <div id="createTicketForm" class="dialog-hidden" title="')
        __M_writer(escape(_('Create Ticket')))
        __M_writer('">\n      <form id="ticketForm">\n        <fieldset>\n            <label for="ticket">')
        __M_writer(escape(_('Comment')))
        __M_writer(':</label>\n            <textarea class="form-control" rows="12" id="ticket" name="ticket" required onpaste="return false;" onCopy="return false" onCut="return false"></textarea>\n            <br>\n            <!-- <label for="lastReport">')
        __M_writer(escape(_('Last Report')))
        __M_writer(':</label>\n            <input type="text" name="lastReport" id="lastReport" value="" required> End-->\n        </fieldset>\n      </form>\n    </div>\n    <div id="createC5Form" class="dialog-hidden" title="')
        __M_writer(escape(_('Datos para enviar al C5')))
        __M_writer('">\n        <h3>Campos:</h3>\n        <dl class="dl-horizontal">\n            <dt>Vehiculo:</dt>\n            <dd id="C5Vehicle"></dd>\n            <dt>IMEI:</dt>\n            <dd id="C5Imei"></dd>\n            <dt>Placas:</dt>\n            <dd id="C5Plates"></dd>\n            <dt>Latitud:</dt>\n            <dd id="C5Latitude"></dd>\n            <dt>Longitud:</dt>\n            <dd id="C5Longitude"></dd>\n            <dt>Velocidad:</dt>\n            <dd id="C5Speed"></dd>\n            <dt>Direccion:</dt>\n            <dd id="C5Heading"></dd>\n            <dt>Valido:</dt>\n            <dd>1</dd>\n            <dt>Estado:</dt>\n            <dd>1</dd>\n        </dl>\n    </div>\n    <!-- Hidden POP UP End-->\n<div id="noteContent" title="')
        __M_writer(escape(_('Basic dialog')))
        __M_writer('">\n</div>\n    <!-- JQGRID table start-->\n    <table style="width:100%">\n    <table id="jqGridAlerts" class="scroll" cellpadding="0" cellspacing="0"></table>\n    <div id="listPagerAlerts" class="scroll" style="text-align:center;"></div>\n    <div id="listPsetcols" class="scroll" style="text-align:center;"></div>\n    </table>\n    <br>\n    <!-- Gauge Meters-->\n    <div class="row">\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="attendedGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="toAttendGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="closedGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n      <div class="col-lg-3">\n          <section class="panel">\n              <div class="panel-body"><div id="scoreGauge" class="30x30px"></div></div>\n          </section>\n      </div>\n    </div>\n\n\n<p>Groups:')
        __M_writer(escape(group))
        __M_writer('</p>\n  <!-- page end-->')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"uri": "/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak", "line_map": {"17": 0, "33": 1, "34": 79, "35": 79, "36": 80, "37": 80, "38": 81, "39": 81, "40": 82, "41": 82, "42": 83, "43": 83, "44": 87, "45": 87, "46": 90, "47": 90, "48": 94, "49": 94, "50": 97, "51": 97, "52": 101, "53": 101, "54": 104, "55": 104, "56": 108, "57": 108, "58": 112, "59": 112, "60": 144, "61": 144, "62": 144, "63": 144, "64": 145, "65": 145, "66": 145, "67": 145, "68": 180, "69": 180, "70": 180, "71": 180, "72": 180, "73": 180, "74": 180, "75": 180, "76": 180, "77": 180, "78": 180, "79": 180, "80": 180, "81": 180, "82": 180, "83": 180, "84": 213, "85": 213, "86": 213, "87": 213, "88": 213, "89": 213, "90": 252, "91": 252, "92": 253, "93": 253, "94": 268, "95": 268, "96": 285, "97": 285, "98": 285, "99": 285, "100": 285, "101": 285, "102": 325, "103": 325, "104": 357, "105": 357, "106": 357, "107": 357, "108": 357, "109": 357, "110": 415, "111": 415, "112": 435, "113": 435, "114": 438, "115": 438, "116": 438, "117": 438, "118": 438, "119": 438, "120": 438, "121": 438, "122": 478, "123": 478, "124": 481, "125": 481, "126": 481, "127": 481, "128": 481, "129": 481, "130": 492, "131": 492, "132": 510, "133": 510, "134": 520, "135": 520, "136": 520, "137": 520, "138": 520, "139": 520, "140": 531, "141": 531, "142": 551, "143": 551, "144": 578, "145": 578, "146": 582, "147": 582, "148": 582, "149": 582, "150": 582, "151": 582, "152": 615, "153": 615, "154": 619, "155": 619, "156": 621, "157": 621, "158": 622, "159": 622, "160": 630, "161": 630, "162": 635, "163": 635, "164": 660, "165": 660, "166": 664, "167": 664, "168": 678, "169": 678, "170": 681, "171": 681, "172": 717, "173": 717, "174": 717, "175": 717, "176": 717, "177": 717, "178": 750, "179": 750, "180": 779, "181": 779, "182": 785, "183": 785, "184": 788, "185": 788, "186": 820, "187": 820, "188": 864, "189": 864, "190": 864, "191": 864, "192": 864, "193": 864, "194": 864, "195": 864, "196": 945, "197": 945, "198": 946, "199": 946, "200": 1004, "201": 1004, "202": 1025, "203": 1025, "204": 1029, "205": 1029, "206": 1033, "207": 1033, "208": 1062, "209": 1062, "210": 1062, "211": 1062, "212": 1134, "213": 1134, "214": 1137, "215": 1137, "216": 1163, "217": 1163, "218": 1163, "219": 1163, "220": 1188, "221": 1188, "222": 1188, "223": 1188, "224": 1236, "225": 1236, "226": 1236, "227": 1236, "228": 1259, "229": 1259, "230": 1260, "231": 1260, "232": 1269, "233": 1269, "234": 1271, "235": 1271, "236": 1281, "237": 1281, "238": 1282, "239": 1282, "240": 1284, "241": 1284, "242": 1286, "243": 1286, "244": 1286, "245": 1286, "246": 1292, "247": 1292, "248": 1294, "249": 1294, "250": 1295, "251": 1295, "252": 1296, "253": 1296, "254": 1297, "255": 1297, "256": 1298, "257": 1298, "258": 1299, "259": 1299, "260": 1300, "261": 1300, "262": 1301, "263": 1301, "264": 1321, "265": 1321, "266": 1329, "267": 1329, "268": 1337, "269": 1337, "270": 1338, "271": 1338, "272": 1350, "273": 1350, "274": 1353, "275": 1353, "276": 1354, "277": 1354, "278": 1355, "279": 1355, "280": 1362, "281": 1362, "282": 1366, "283": 1367, "284": 1367, "285": 1367, "286": 1367, "287": 1367, "288": 1367, "289": 1367, "290": 1369, "291": 1371, "292": 1371, "293": 1374, "294": 1374, "295": 1379, "296": 1379, "297": 1383, "298": 1384, "299": 1384, "300": 1384, "301": 1384, "302": 1384, "303": 1384, "304": 1384, "305": 1386, "306": 1388, "307": 1388, "308": 1393, "309": 1393, "310": 1396, "311": 1396, "312": 1399, "313": 1399, "314": 1404, "315": 1404, "316": 1428, "317": 1428, "318": 1462, "319": 1462, "325": 319}, "source_encoding": "utf-8", "filename": "/Users/jorgemacias/Documents/python.dispatch.ms/pythondispatchms/templates/traffic/traffic.mak"}
__M_END_METADATA
"""
